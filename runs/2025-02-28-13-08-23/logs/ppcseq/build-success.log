'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/noble/latest
Bioconductor version 3.20 (BiocManager 1.30.25), R 4.4.2 (2024-10-31)
Installing package(s) 'ppcseq'
also installing the dependencies ‘svUnit’, ‘benchmarkmeData’, ‘arrayhelpers’, ‘benchmarkme’, ‘rstantools’, ‘tidybayes’

trying URL 'https://p3m.dev/cran/__linux__/noble/latest/src/contrib/svUnit_1.0.6.tar.gz'
Content type 'binary/octet-stream' length 617938 bytes (603 KB)
==================================================
downloaded 603 KB

trying URL 'https://p3m.dev/cran/__linux__/noble/latest/src/contrib/benchmarkmeData_1.0.4.tar.gz'
Content type 'binary/octet-stream' length 282080 bytes (275 KB)
==================================================
downloaded 275 KB

trying URL 'https://p3m.dev/cran/__linux__/noble/latest/src/contrib/arrayhelpers_1.1-0.tar.gz'
Content type 'binary/octet-stream' length 99514 bytes (97 KB)
==================================================
downloaded 97 KB

trying URL 'https://p3m.dev/cran/__linux__/noble/latest/src/contrib/benchmarkme_1.0.8.tar.gz'
Content type 'binary/octet-stream' length 122667 bytes (119 KB)
==================================================
downloaded 119 KB

trying URL 'https://p3m.dev/cran/__linux__/noble/latest/src/contrib/rstantools_2.4.0.tar.gz'
Content type 'binary/octet-stream' length 170217 bytes (166 KB)
==================================================
downloaded 166 KB

trying URL 'https://p3m.dev/cran/__linux__/noble/latest/src/contrib/tidybayes_3.0.7.tar.gz'
Content type 'binary/octet-stream' length 2046355 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/ppcseq_1.14.0.tar.gz'
Content type 'application/x-gzip' length 2139225 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

* installing *binary* package ‘svUnit’ ...
* ‘svUnit’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘svUnit’ as ‘svUnit_1.0.6_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (svUnit)
* installing *binary* package ‘benchmarkmeData’ ...
* ‘benchmarkmeData’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘benchmarkmeData’ as ‘benchmarkmeData_1.0.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (benchmarkmeData)
* installing *binary* package ‘rstantools’ ...
* ‘rstantools’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rstantools’ as ‘rstantools_2.4.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rstantools)
* installing *binary* package ‘arrayhelpers’ ...
* ‘arrayhelpers’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘arrayhelpers’ as ‘arrayhelpers_1.1-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (arrayhelpers)
* installing *binary* package ‘benchmarkme’ ...
* ‘benchmarkme’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘benchmarkme’ as ‘benchmarkme_1.0.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (benchmarkme)
* installing *binary* package ‘tidybayes’ ...
* ‘tidybayes’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘tidybayes’ as ‘tidybayes_3.0.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (tidybayes)
* installing *source* package ‘ppcseq’ ...
** package ‘ppcseq’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’
using C++17


g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I"../inst/include" -I"/mnt/library/StanHeaders/include/src" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -DUSE_STANC3 -D_HAS_AUTO_PTR_ETC=0 -I'/mnt/library/BH/include' -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/mnt/library/RcppEigen/include' -I'/mnt/library/RcppParallel/include' -I'/mnt/library/rstan/include' -I'/mnt/library/StanHeaders/include' -I/usr/local/include    -I'/mnt/library/RcppParallel/include' -D_REENTRANT -DSTAN_THREADS   -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c RcppExports.cpp -o RcppExports.o
In file included from /mnt/library/RcppEigen/include/Eigen/Core:205,
                 from /mnt/library/RcppEigen/include/Eigen/Dense:1,
                 from /mnt/library/RcppEigen/include/RcppEigenForward.h:28,
                 from /mnt/library/RcppEigen/include/RcppEigen.h:25,
                 from RcppExports.cpp:4:
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:46:40: warning: ignoring attributes on template argument ‘__m128i’ [-Wignored-attributes]
   46 | typedef eigen_packet_wrapper<__m128i, 0> Packet4i;
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:47:40: warning: ignoring attributes on template argument ‘__m128i’ [-Wignored-attributes]
   47 | typedef eigen_packet_wrapper<__m128i, 1> Packet16b;
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:49:39: warning: ignoring attributes on template argument ‘__m128’ [-Wignored-attributes]
   49 | template<> struct is_arithmetic<__m128>  { enum { value = true }; };
      |                                       ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:50:40: warning: ignoring attributes on template argument ‘__m128i’ [-Wignored-attributes]
   50 | template<> struct is_arithmetic<__m128i> { enum { value = true }; };
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:51:40: warning: ignoring attributes on template argument ‘__m128d’ [-Wignored-attributes]
   51 | template<> struct is_arithmetic<__m128d> { enum { value = true }; };
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:222:43: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
  222 | template<> struct unpacket_traits<Packet4f> {
      |                                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:228:43: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
  228 | template<> struct unpacket_traits<Packet2d> {
      |                                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:1124:34: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
 1124 | ptranspose(PacketBlock<Packet4f,4>& kernel) {
      |                                  ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:1129:34: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
 1129 | ptranspose(PacketBlock<Packet2d,2>& kernel) {
      |                                  ^
In file included from /mnt/library/RcppEigen/include/Eigen/Core:174:
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:16:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
   16 |   struct conj_helper<PACKET_REAL, PACKET_CPLX, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:173:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  173 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet2cf,Packet4f)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:29:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
   29 |   struct conj_helper<PACKET_CPLX, PACKET_REAL, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:173:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  173 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet2cf,Packet4f)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:16:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
   16 |   struct conj_helper<PACKET_REAL, PACKET_CPLX, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:298:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  298 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet1cd,Packet2d)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:29:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
   29 |   struct conj_helper<PACKET_CPLX, PACKET_REAL, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:298:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  298 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet1cd,Packet2d)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:165:
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<float, 4>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:266:49:   required from ‘struct Eigen::internal::traits<Eigen::Quaternion<float> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:24:46:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(4) float>::half’ {aka ‘__m128’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:271:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<float, 4, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:46:50:   required from ‘class Eigen::QuaternionBase<Eigen::Quaternion<float> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:273:7:   required from ‘class Eigen::Quaternion<float>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:27:3:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 4>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:266:49:   required from ‘struct Eigen::internal::traits<Eigen::Quaternion<double> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:98:47:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 4, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:46:50:   required from ‘class Eigen::QuaternionBase<Eigen::Quaternion<double> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:273:7:   required from ‘class Eigen::Quaternion<double>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:102:3:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/SparseCore:37,
                 from /mnt/library/RcppEigen/include/Eigen/Sparse:26,
                 from /mnt/library/RcppEigen/include/RcppEigenForward.h:29:
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of ‘class Eigen::SparseMatrixBase<Eigen::SparseMatrix<double, 0, int> >’:
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseCompressedBase.h:36:7:   required from ‘class Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >’
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrix.h:96:7:   required from ‘class Eigen::SparseMatrix<double, 0, int>’
/mnt/library/RcppEigen/include/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h:61:25:   required from here
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   47 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~


g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I"../inst/include" -I"/mnt/library/StanHeaders/include/src" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error -DUSE_STANC3 -D_HAS_AUTO_PTR_ETC=0 -I'/mnt/library/BH/include' -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/mnt/library/RcppEigen/include' -I'/mnt/library/RcppParallel/include' -I'/mnt/library/rstan/include' -I'/mnt/library/StanHeaders/include' -I/usr/local/include    -I'/mnt/library/RcppParallel/include' -D_REENTRANT -DSTAN_THREADS   -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c stanExports_negBinomial_MPI.cc -o stanExports_negBinomial_MPI.o
In file included from /mnt/library/RcppEigen/include/Eigen/Core:205,
                 from /mnt/library/RcppEigen/include/Eigen/Dense:1,
                 from /mnt/library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22,
                 from /mnt/library/rstan/include/rstan/rstaninc.hpp:3,
                 from stanExports_negBinomial_MPI.h:23,
                 from stanExports_negBinomial_MPI.cc:5:
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:46:40: warning: ignoring attributes on template argument ‘__m128i’ [-Wignored-attributes]
   46 | typedef eigen_packet_wrapper<__m128i, 0> Packet4i;
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:47:40: warning: ignoring attributes on template argument ‘__m128i’ [-Wignored-attributes]
   47 | typedef eigen_packet_wrapper<__m128i, 1> Packet16b;
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:49:39: warning: ignoring attributes on template argument ‘__m128’ [-Wignored-attributes]
   49 | template<> struct is_arithmetic<__m128>  { enum { value = true }; };
      |                                       ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:50:40: warning: ignoring attributes on template argument ‘__m128i’ [-Wignored-attributes]
   50 | template<> struct is_arithmetic<__m128i> { enum { value = true }; };
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:51:40: warning: ignoring attributes on template argument ‘__m128d’ [-Wignored-attributes]
   51 | template<> struct is_arithmetic<__m128d> { enum { value = true }; };
      |                                        ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:222:43: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
  222 | template<> struct unpacket_traits<Packet4f> {
      |                                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:228:43: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
  228 | template<> struct unpacket_traits<Packet2d> {
      |                                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:1124:34: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
 1124 | ptranspose(PacketBlock<Packet4f,4>& kernel) {
      |                                  ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/PacketMath.h:1129:34: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
 1129 | ptranspose(PacketBlock<Packet2d,2>& kernel) {
      |                                  ^
In file included from /mnt/library/RcppEigen/include/Eigen/Core:174:
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:16:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
   16 |   struct conj_helper<PACKET_REAL, PACKET_CPLX, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:173:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  173 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet2cf,Packet4f)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:29:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet4f’ {aka ‘__m128’} [-Wignored-attributes]
   29 |   struct conj_helper<PACKET_CPLX, PACKET_REAL, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:173:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  173 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet2cf,Packet4f)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:16:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
   16 |   struct conj_helper<PACKET_REAL, PACKET_CPLX, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:298:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  298 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet1cd,Packet2d)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/Default/ConjHelper.h:29:60: warning: ignoring attributes on template argument ‘Eigen::internal::Packet2d’ {aka ‘__m128d’} [-Wignored-attributes]
   29 |   struct conj_helper<PACKET_CPLX, PACKET_REAL, false, false> {          \
      |                                                            ^
/mnt/library/RcppEigen/include/Eigen/src/Core/arch/SSE/Complex.h:298:1: note: in expansion of macro ‘EIGEN_MAKE_CONJ_HELPER_CPLX_REAL’
  298 | EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet1cd,Packet2d)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:165:
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<float, 4>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:266:49:   required from ‘struct Eigen::internal::traits<Eigen::Quaternion<float> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:24:46:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(4) float>::half’ {aka ‘__m128’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:271:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<float, 4, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:46:50:   required from ‘class Eigen::QuaternionBase<Eigen::Quaternion<float> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:273:7:   required from ‘class Eigen::Quaternion<float>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:27:3:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<float>::type’ {aka ‘__m128’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 4>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:266:49:   required from ‘struct Eigen::internal::traits<Eigen::Quaternion<double> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:98:47:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 4, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:46:50:   required from ‘class Eigen::QuaternionBase<Eigen::Quaternion<double> >’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/Quaternion.h:273:7:   required from ‘class Eigen::Quaternion<double>’
/mnt/library/RcppEigen/include/Eigen/src/Geometry/arch/Geometry_SIMD.h:102:3:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
In file included from /mnt/library/BH/include/boost/smart_ptr/shared_ptr.hpp:17,
                 from /mnt/library/BH/include/boost/shared_ptr.hpp:17,
                 from /mnt/library/BH/include/boost/date_time/time_clock.hpp:17,
                 from /mnt/library/BH/include/boost/date_time/posix_time/posix_time_types.hpp:10,
                 from /mnt/library/rstan/include/rstan/stan_fit.hpp:15,
                 from /mnt/library/rstan/include/rstan/rstaninc.hpp:4:
/mnt/library/BH/include/boost/smart_ptr/detail/shared_count.hpp:326:33: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  326 |     explicit shared_count( std::auto_ptr<Y> & r ): pi_( new sp_counted_impl_p<Y>( r.get() ) )
      |                                 ^~~~~~~~
In file included from /usr/include/c++/13/memory:78,
                 from /mnt/library/rstan/include/rstan/stan_fit.hpp:7:
/usr/include/c++/13/bits/unique_ptr.h:65:28: note: declared here
   65 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
/mnt/library/BH/include/boost/smart_ptr/shared_ptr.hpp:354:31: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  354 |     explicit shared_ptr( std::auto_ptr<Y> & r ): px(r.get()), pn()
      |                               ^~~~~~~~
/usr/include/c++/13/bits/unique_ptr.h:65:28: note: declared here
   65 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
/mnt/library/BH/include/boost/smart_ptr/shared_ptr.hpp:365:22: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  365 |     shared_ptr( std::auto_ptr<Y> && r ): px(r.get()), pn()
      |                      ^~~~~~~~
/usr/include/c++/13/bits/unique_ptr.h:65:28: note: declared here
   65 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
/mnt/library/BH/include/boost/smart_ptr/shared_ptr.hpp:423:34: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  423 |     shared_ptr & operator=( std::auto_ptr<Y> & r )
      |                                  ^~~~~~~~
/usr/include/c++/13/bits/unique_ptr.h:65:28: note: declared here
   65 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
/mnt/library/BH/include/boost/smart_ptr/shared_ptr.hpp:430:34: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  430 |     shared_ptr & operator=( std::auto_ptr<Y> && r )
      |                                  ^~~~~~~~
/usr/include/c++/13/bits/unique_ptr.h:65:28: note: declared here
   65 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
/mnt/library/BH/include/boost/smart_ptr/shared_ptr.hpp: In member function ‘boost::shared_ptr<T>& boost::shared_ptr<T>::operator=(std::auto_ptr<_Up>&&)’:
/mnt/library/BH/include/boost/smart_ptr/shared_ptr.hpp:432:38: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  432 |         this_type( static_cast< std::auto_ptr<Y> && >( r ) ).swap( *this );
      |                                      ^~~~~~~~
/usr/include/c++/13/bits/unique_ptr.h:65:28: note: declared here
   65 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/SparseCore:37,
                 from /mnt/library/RcppEigen/include/Eigen/Sparse:26,
                 from /mnt/library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:23:
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of ‘class Eigen::SparseMatrixBase<Eigen::SparseMatrix<double, 0, int> >’:
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseCompressedBase.h:36:7:   required from ‘class Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >’
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrix.h:96:7:   required from ‘class Eigen::SparseMatrix<double, 0, int>’
/mnt/library/RcppEigen/include/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h:61:25:   required from here
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   47 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, -1>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:19:52:   required from ‘struct Eigen::internal::traits<Eigen::LDLT<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:42:59:   required from ‘struct Eigen::EigenBase<Eigen::LDLT<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolverBase.h:68:7:   required from ‘class Eigen::SolverBase<Eigen::LDLT<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:59:49:   required from ‘class Eigen::LDLT<Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:46:15:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, -1, -1>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:69:42:   required from ‘class Eigen::LDLT<Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:46:15:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, -1, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:287:19:   required from ‘class Eigen::LDLT<Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:46:15:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:47:29:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:47:41:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_LE>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:47:45:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Matrix<double, -1, -1>, -1, 1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/multiply_lower_tri_self_transpose.hpp:35:26:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorBlock.h:56:47:   required from ‘class Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/multiply_lower_tri_self_transpose.hpp:35:34:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/linspaced_array.hpp:37:49:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 1, -1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 1, -1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 1, -1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/linspaced_row_vector.hpp:32:28:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Matrix<double, 1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/linspaced_row_vector.hpp:32:39:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Array<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Array<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Array<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Array.h:45:7:   required from ‘class Eigen::Array<double, -1, 1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lmgamma.hpp:58:53:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lmgamma.hpp:58:72:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lmgamma.hpp:58:77:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:71:17:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:71:29:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:86:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:106:22:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorwiseOp.h:56:7:   required from ‘class Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:106:38:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/ceil.hpp:57:52:   required from ‘stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)> [with auto:244 = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:47:25:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)>; T2 = Eigen::Matrix<double, -1, -1>; stan::require_t<stan::is_eigen_matrix_base<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/ceil.hpp:56:46:   required from ‘auto stan::math::ceil(const Container&) [with Container = Eigen::Matrix<double, -1, -1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0; stan::require_not_var_matrix_t<Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:197:41:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/ceil.hpp:57:52:   required from ‘stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)> [with auto:244 = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:47:25:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)>; T2 = Eigen::Matrix<double, -1, -1>; stan::require_t<stan::is_eigen_matrix_base<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/ceil.hpp:56:46:   required from ‘auto stan::math::ceil(const Container&) [with Container = Eigen::Matrix<double, -1, -1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0; stan::require_not_var_matrix_t<Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:197:41:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:140:7:   required from ‘class Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:46:70:   required from ‘stan::math::apply_vector_unary<Eigen::Matrix<double, -1, -1>, void>::apply<stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)> >(const Eigen::Matrix<double, -1, -1>&, const stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)>&)::<lambda(const auto:6&)> [with auto:6 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::math::apply_vector_unary<Eigen::Matrix<double, -1, -1>, void>::apply<stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)> >(const Eigen::Matrix<double, -1, -1>&, const stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)>&)::<lambda(const auto:6&)>; Args = {Eigen::CwiseUnaryOp<Eigen::internal::scalar_ceil_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1, 0, -1, -1> > >}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:46:23:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::ceil<Eigen::Matrix<double, -1, -1> >(const Eigen::Matrix<double, -1, -1>&)::<lambda(const auto:244&)>; T2 = Eigen::Matrix<double, -1, -1>; stan::require_t<stan::is_eigen_matrix_base<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/ceil.hpp:56:46:   required from ‘auto stan::math::ceil(const Container&) [with Container = Eigen::Matrix<double, -1, -1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0; stan::require_not_var_matrix_t<Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:197:41:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::PartialReduxExpr<Eigen::Matrix<double, -1, -1>, Eigen::internal::member_minCoeff<double, double>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::PartialReduxExpr<Eigen::Matrix<double, -1, -1>, Eigen::internal::member_minCoeff<double, double>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::PartialReduxExpr<Eigen::Matrix<double, -1, -1>, Eigen::internal::member_minCoeff<double, double>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorwiseOp.h:56:7:   required from ‘class Eigen::PartialReduxExpr<Eigen::Matrix<double, -1, -1>, Eigen::internal::member_minCoeff<double, double>, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:203:38:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/one_hot_row_vector.hpp:25:52:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/one_hot_vector.hpp:25:46:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:13:64:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:26:31:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:27:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:27:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:28:38:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0, 5>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:28:39:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:37:40:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:37:40:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_var_estimator.hpp:28:30:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/ode_store_sensitivities.hpp:40:64:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
In file included from /mnt/library/BH/include/boost/fusion/functional/invocation/detail/that_ptr.hpp:13,
                 from /mnt/library/BH/include/boost/fusion/functional/invocation/invoke.hpp:52,
                 from /mnt/library/BH/include/boost/fusion/functional/adapter/fused.hpp:17,
                 from /mnt/library/BH/include/boost/fusion/functional/generation/make_fused.hpp:13,
                 from /mnt/library/BH/include/boost/fusion/include/make_fused.hpp:11,
                 from /mnt/library/BH/include/boost/numeric/odeint/util/resize.hpp:30,
                 from /mnt/library/BH/include/boost/numeric/odeint/util/state_wrapper.hpp:26,
                 from /mnt/library/BH/include/boost/numeric/odeint/util/ublas_wrapper.hpp:33,
                 from /mnt/library/BH/include/boost/numeric/odeint.hpp:25,
                 from /mnt/library/StanHeaders/include/stan/math/prim/functor/ode_rk45.hpp:9,
                 from /mnt/library/StanHeaders/include/stan/math/prim/functor/integrate_ode_rk45.hpp:6,
                 from /mnt/library/StanHeaders/include/stan/math/prim/functor.hpp:16,
                 from /mnt/library/StanHeaders/include/stan/math/prim.hpp:15,
                 from /mnt/library/StanHeaders/include/src/stan/io/dump.hpp:7,
                 from /mnt/library/rstan/include/rstan/stan_fit.hpp:43:
/mnt/library/BH/include/boost/get_pointer.hpp: At global scope:
/mnt/library/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   48 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
/usr/include/c++/13/bits/unique_ptr.h:65:28: note: declared here
   65 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:92:42:   required from ‘stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)> [with auto:304 = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:93:13:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::reduce(const T&, const F&) [with F = stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)>; T = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:83:39:   required from ‘auto stan::math::log_sum_exp(const T&) [with T = Eigen::Matrix<double, -1, 1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/dirichlet_rng.hpp:59:35:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:92:42:   required from ‘stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)> [with auto:304 = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:93:13:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::reduce(const T&, const F&) [with F = stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)>; T = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:83:39:   required from ‘auto stan::math::log_sum_exp(const T&) [with T = Eigen::Matrix<double, -1, 1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/dirichlet_rng.hpp:59:35:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:92:42:   required from ‘stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)> [with auto:304 = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:93:13:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::reduce(const T&, const F&) [with F = stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)>; T = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:83:39:   required from ‘auto stan::math::log_sum_exp(const T&) [with T = Eigen::Matrix<double, -1, 1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/dirichlet_rng.hpp:59:35:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:92:26:   required from ‘stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)> [with auto:304 = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:93:13:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::reduce(const T&, const F&) [with F = stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)>; T = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:83:39:   required from ‘auto stan::math::log_sum_exp(const T&) [with T = Eigen::Matrix<double, -1, 1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/dirichlet_rng.hpp:59:35:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:38:59:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:46:75:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>, 2>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>, 2> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>, 2> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>, 2, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>, 2, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 5>, Eigen::Matrix<double, -1, 1>, 0>, 2>’
/mnt/library/StanHeaders/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:46:76:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:135:41:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/hmm_latent_rng.hpp:83:27:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_cholesky_rng.hpp:49:68:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::TriangularView<const Eigen::Matrix<double, -1, -1>, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_cholesky_rng.hpp:49:68:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:42:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:32:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/inv_wishart_rng.hpp:27:40:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/inv_wishart_rng.hpp:27:40:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/inv_wishart_rng.hpp:27:40:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:89:47:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_sqrt_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:89:54:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:86:7:   required from ‘class Eigen::SolveImpl<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:62:7:   required from ‘class Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:109:64:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:108:51:   recursively required by substitution of ‘template<int Side, class Other> const Eigen::internal::triangular_solve_retval<Side, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Other> Eigen::TriangularViewImpl<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6, Eigen::Dense>::solve(const Eigen::MatrixBase<U>&) const [with int Side = <missing>; Other = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:108:51:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/ForwardDeclarations.h:32:48:   required from ‘struct Eigen::internal::accessors_level<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:86:7:   required from ‘class Eigen::SolveImpl<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:62:7:   required from ‘class Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:110:32:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:86:7:   required from ‘class Eigen::SolveImpl<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:62:7:   required from ‘class Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:110:32:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:110:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:111:51:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>, Eigen::Transpositions<-1, -1, int>, 2>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>, Eigen::Transpositions<-1, -1, int>, 2> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>, Eigen::Transpositions<-1, -1, int>, 2> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>, Eigen::Transpositions<-1, -1, int>, 2, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>, Eigen::Transpositions<-1, -1, int>, 2, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::TranspositionsBase<Eigen::Transpositions<-1, -1, int> > >, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Transpose<const Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 6>, Eigen::Matrix<double, -1, -1> > > > >, 2>, Eigen::Transpositions<-1, -1, int>, 2>’
/mnt/library/StanHeaders/include/stan/math/prim/prob/matrix_normal_prec_rng.hpp:111:52:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_scalar_unary.hpp:62:23:   required from ‘static auto stan::math::apply_scalar_unary<F, T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp2>::type>::value, void>::type>::apply(const T&) [with F = stan::math::lgamma_fun; T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_scalar_unary.hpp:72:38:   required from ‘struct stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, void>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:120:50:   required from ‘auto stan::math::lgamma(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int, int>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >; stan::require_not_var_matrix_t<Container>* <anonymous> = 0; stan::require_not_nonscalar_prim_or_rev_kernel_expression_t<Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/multinomial_logit_lpmf.hpp:39:44:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1>, -1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Matrix<double, -1, -1>, -1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cholesky_decompose.hpp:102:16:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cholesky_decompose.hpp:111:28:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cholesky_decompose.hpp:116:27:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Ref.h:59:34:   required from ‘class Eigen::RefBase<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Ref.h:281:76:   required from ‘class Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:76:42:   required from ‘class Eigen::LLT<Eigen::Ref<Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, 1>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cholesky_decompose.hpp:142:57:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:13:7:   required from ‘class stan::math::arena_matrix<Eigen::Matrix<double, -1, -1>, void>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cholesky_decompose.hpp:144:6:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cholesky_factor_constrain.hpp:42:17:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:28:50:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:28:27:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:46:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:32:23:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/gp_exp_quad_cov.hpp:94:38:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/gp_exp_quad_cov.hpp:94:63:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/gp_exp_quad_cov.hpp:94:70:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/gp_exp_quad_cov.hpp:94:70:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/gp_exp_quad_cov.hpp:94:72:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of ‘class Eigen::SparseMatrixBase<Eigen::SparseMatrix<double, 1> >’:
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseCompressedBase.h:36:7:   required from ‘class Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_base_pointer_convertible.hpp:29:17:   recursively required by substitution of ‘template<class OtherDerived> static std::true_type stan::is_base_pointer_convertible<Eigen::EigenBase, Eigen::SparseMatrix<double, 1> >::f(const Eigen::EigenBase<Derived>*) [with OtherDerived = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_base_pointer_convertible.hpp:29:17:   required from ‘struct stan::is_base_pointer_convertible<Eigen::EigenBase, Eigen::SparseMatrix<double, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_eigen.hpp:20:8:   required from ‘struct stan::is_eigen<Eigen::SparseMatrix<double, 1> >’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:301:19:   required by substitution of ‘template<class T> class stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type> [with T = Eigen::SparseMatrix<double, 1>]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/csr_matrix_times_vector.hpp:120:40:   required from here
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   47 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of ‘class Eigen::SparseMatrixBase<Eigen::Map<Eigen::SparseMatrix<double, 1>, 0, Eigen::Stride<0, 0> > >’:
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseCompressedBase.h:36:7:   required from ‘class Eigen::SparseCompressedBase<Eigen::Map<Eigen::SparseMatrix<double, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMap.h:50:7:   required from ‘class Eigen::SparseMapBase<Eigen::Map<Eigen::SparseMatrix<double, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMap.h:148:7:   required from ‘class Eigen::SparseMapBase<Eigen::Map<Eigen::SparseMatrix<double, 1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMap.h:222:7:   required from ‘class Eigen::Map<Eigen::SparseMatrix<double, 1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:129:7:   required from ‘class stan::math::arena_matrix<Eigen::SparseMatrix<double, 1>, void>’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:814:9:   required from ‘class stan::math::vari_value<Eigen::SparseMatrix<double, 1>, void>’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:419:57:   required from ‘const auto& stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::val() const [with T = Eigen::SparseMatrix<double, 1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/csr_matrix_times_vector.hpp:120:44:   required from here
/mnt/library/RcppEigen/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, -1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, -1>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, -1>’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:97:21:   required from ‘class Eigen::Tridiagonalization<Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:111:62:   required from ‘class Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/eigendecompose_sym.hpp:40:46:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::adj_Op, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::adj_Op, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::adj_Op, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::adj_Op, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::adj_Op, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::adj_Op, Eigen::Matrix<stan::math::var_value<double>, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   required from ‘class Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::adj_Op, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/grad.hpp:27:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:66:51:   required from ‘stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)> [with auto:169 = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:47:25:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)>; T2 = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<stan::is_eigen_matrix_base<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:65:46:   required from ‘auto stan::math::log(const Container&) [with Container = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/log_determinant_spd.hpp:49:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:66:51:   required from ‘stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)> [with auto:169 = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:47:25:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)>; T2 = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<stan::is_eigen_matrix_base<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:65:46:   required from ‘auto stan::math::log(const Container&) [with Container = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/log_determinant_spd.hpp:49:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:140:7:   required from ‘class Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:46:70:   required from ‘stan::math::apply_vector_unary<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>, void>::apply<stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&, const stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)>&)::<lambda(const auto:6&)> [with auto:6 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::math::apply_vector_unary<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>, void>::apply<stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&, const stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)>&)::<lambda(const auto:6&)>; Args = {Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> > >}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:46:23:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::log<Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >(const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>&)::<lambda(const auto:169&)>; T2 = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<stan::is_eigen_matrix_base<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:65:46:   required from ‘auto stan::math::log(const Container&) [with Container = Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/log_determinant_spd.hpp:49:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:13:7:   required from ‘class stan::math::arena_matrix<Eigen::Matrix<double, -1, -1, 1, -1, -1>, void>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/log_determinant_spd.hpp:51:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/log_softmax.hpp:73:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/matrix_power.hpp:63:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/matrix_power.hpp:64:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   required from ‘class Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/mdivide_left_spd.hpp:67:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/mdivide_left_tri.hpp:85:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/quad_form.hpp:25:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:55:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:13:7:   required from ‘class stan::math::arena_matrix<Eigen::Array<double, -1, 1>, void>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:56:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorBlock.h:56:47:   required from ‘class Eigen::VectorBlock<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:63:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Array<double, -1, 1>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Array<double, -1, 1>, -1, 1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorBlock.h:56:47:   required from ‘class Eigen::VectorBlock<Eigen::Array<double, -1, 1>, -1>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:86:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:86:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:90:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:90:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorBlock.h:56:47:   required from ‘class Eigen::VectorBlock<Eigen::Block<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:90:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_sqrt_op<double>, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::Block<Eigen::Array<double, -1, 1>, -1, 1, false> >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_corr_L.hpp:90:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/read_cov_matrix.hpp:56:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Matrix<int, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Matrix<int, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Matrix<int, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Matrix<int, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Matrix<int, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/rows_dot_self.hpp:41:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/svd.hpp:56:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/svd.hpp:69:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/svd.hpp:69:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/svd.hpp:70:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/svd_V.hpp:61:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:140:7:   required from ‘class Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/svd_V.hpp:61:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/DiagonalMatrix.h:278:47:   required from ‘struct Eigen::internal::traits<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:42:59:   required from ‘struct Eigen::EigenBase<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/DiagonalMatrix.h:18:7:   required from ‘class Eigen::DiagonalBase<Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/DiagonalMatrix.h:293:7:   required from ‘class Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/svd_V.hpp:63:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   required from ‘class Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/squared_distance.hpp:79:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/squared_distance.hpp:79:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/squared_distance.hpp:79:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   required from ‘class Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/squared_distance.hpp:80:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/squared_distance.hpp:111:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::vari_value<double>*, -1, 1> > >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/squared_distance.hpp:111:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   required from ‘class Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/variance.hpp:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/variance.hpp:25:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/variance.hpp:27:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/variance.hpp:27:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, 1>&>(const Eigen::Matrix<var_value<double>, -1, 1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, 1>&>(const Eigen::Matrix<var_value<double>, -1, 1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, 1>&>(const Eigen::Matrix<var_value<double>, -1, 1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, 1>&>(const Eigen::Matrix<var_value<double>, -1, 1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, 1>&>(const Eigen::Matrix<var_value<double>, -1, 1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of.hpp:75:75:   required from ‘stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, 1>&>(const Eigen::Matrix<var_value<double>, -1, 1>&)::<lambda(auto:11&)> [with auto:11 = const Eigen::Matrix<stan::math::var_value<double>, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, 1>&>(const Eigen::Matrix<var_value<double>, -1, 1>&)::<lambda(auto:11&)>; Args = {const Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1>&}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of.hpp:73:21:   required from ‘auto stan::math::value_of(EigMat&&) [with EigMat = const Eigen::Matrix<var_value<double>, -1, 1>&; stan::require_eigen_dense_base_t<EigMat>* <anonymous> = 0; stan::require_not_st_arithmetic<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/functor/algebra_solver_fp.hpp:101:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   required from ‘class Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/functor/solve_powell.hpp:369:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:86:7:   required from ‘class Eigen::SolveImpl<Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:62:7:   required from ‘class Eigen::Solve<Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/rev/functor/solve_powell.hpp:369:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:99:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:182:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:183:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:197:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_sqrt_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:198:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:263:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:351:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:351:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, const Eigen::ArrayWrapper<const Eigen::Diagonal<const Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:459:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_meanfield.hpp:314:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_meanfield.hpp:314:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_meanfield.hpp:314:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_meanfield.hpp:370:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:126:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0, 6>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 1>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:179:81:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:126:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0, 6>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_matrix.hpp:133:17:   required from ‘auto stan::math::to_matrix(const std::vector<T>&, int, int) [with T = double]’
/mnt/library/StanHeaders/include/src/stan/services/util/read_dense_inv_metric.hpp:33:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >’
/mnt/library/StanHeaders/include/src/stan/mcmc/covar_adaptation.hpp:27:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/StanHeaders/include/src/stan/mcmc/covar_adaptation.hpp:29:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/StanHeaders/include/src/stan/mcmc/covar_adaptation.hpp:29:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/diag_e_metric.hpp:21:0:   recursively required by substitution of ‘template<class OtherDerived> typename Eigen::ScalarBinaryOpTraits<double, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<double, typename Eigen::internal::traits<T>::Scalar> >::ReturnType Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >::dot(const Eigen::MatrixBase<Derived>&) const [with OtherDerived = <missing>]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/diag_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/mcmc/var_adaptation.hpp:27:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/mcmc/var_adaptation.hpp:28:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/src/stan/mcmc/var_adaptation.hpp:28:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:13:7:   required from ‘class stan::math::arena_matrix<Eigen::Matrix<double, 1, -1>, void>’
/mnt/library/StanHeaders/include/src/stan/model/indexing/rvalue_varmat.hpp:145:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >’
/mnt/library/StanHeaders/include/src/stan/io/deserializer.hpp:218:0:   required from ‘auto stan::io::deserializer<T>::read(Eigen::Index) [with Ret = Eigen::Matrix<double, 1, -1>; stan::require_eigen_row_vector_t<Ret>* <anonymous> = 0; stan::require_not_vt_complex<Ret>* <anonymous> = 0; T = double; Eigen::Index = long int]’
stanExports_negBinomial_MPI.h:1305:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:140:7:   required from ‘class Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:46:70:   required from ‘stan::math::apply_vector_unary<Eigen::Matrix<double, -1, 1>, void>::apply<stan::math::exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:215&)> >(const Eigen::Matrix<double, -1, 1>&, const stan::math::exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:215&)>&)::<lambda(const auto:6&)> [with auto:6 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::math::apply_vector_unary<Eigen::Matrix<double, -1, 1>, void>::apply<stan::math::exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:215&)> >(const Eigen::Matrix<double, -1, 1>&, const stan::math::exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:215&)>&)::<lambda(const auto:6&)>; Args = {Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1, 0, -1, 1> > >}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:46:23:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:215&)>; T2 = Eigen::Matrix<double, -1, 1>; stan::require_t<stan::is_eigen_matrix_base<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/exp.hpp:62:46:   required from ‘auto stan::math::exp(const Container&) [with Container = Eigen::Matrix<double, -1, 1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1361:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/elt_divide.hpp:61:22:   required from ‘auto stan::math::elt_divide(Scal, const Mat&) [with Scal = double; Mat = Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >; stan::require_stan_scalar_t<T>* <anonymous> = 0; stan::require_eigen_t<T>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1361:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/elt_divide.hpp:61:13:   required from ‘auto stan::math::elt_divide(Scal, const Mat&) [with Scal = double; Mat = Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >; stan::require_stan_scalar_t<T>* <anonymous> = 0; stan::require_eigen_t<T>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1361:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:140:7:   required from ‘class Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/elt_divide.hpp:61:32:   required from ‘auto stan::math::elt_divide(Scal, const Mat&) [with Scal = double; Mat = Eigen::MatrixWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >; stan::require_stan_scalar_t<T>* <anonymous> = 0; stan::require_eigen_t<T>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1361:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/multiply.hpp:107:13:   required from ‘auto stan::math::multiply(const Mat1&, const Mat2&) [with Mat1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Mat2 = Eigen::Matrix<double, -1, -1>; stan::require_all_eigen_vt<std::is_arithmetic, Mat1, Mat2>* <anonymous> = 0; stan::require_not_eigen_row_and_col_t<Mat1, Mat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1368:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:35:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 3>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Array.h:17:8:   required from ‘struct Eigen::internal::traits<Eigen::Array<double, 3, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Array<double, 3, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Array.h:45:7:   required from ‘class Eigen::Array<double, 3, 1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:28:11:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, 3, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, 3, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, 3, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Array<double, 3, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Array<double, 3, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Array<double, 3, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Array.h:45:7:   required from ‘class Eigen::Array<double, 3, 1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:28:11:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::math::as_array_or_scalar<const std::vector<double>&>(const std::vector<double>&)::<lambda(auto:14&)>; Args = {const std::vector<double, std::allocator<double> >&}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/as_array_or_scalar.hpp:72:21:   required from ‘auto stan::math::as_array_or_scalar(T&&) [with T = const std::vector<double>&; stan::require_std_vector_t<T>* <anonymous> = 0; stan::require_not_std_vector_t<typename stan::value_type<T>::type>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:28:39:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:47:43:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Select.h:52:7:   required from ‘class Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:47:55:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/fabs.hpp:67:51:   required from ‘stan::math::fabs<Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >(const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >&)::<lambda(const auto:9&)> [with auto:9 = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::fabs<Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >(const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >&)::<lambda(const auto:9&)>; T2 = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >; stan::require_t<stan::is_eigen_array<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/fabs.hpp:66:46:   required from ‘auto stan::math::fabs(const Container&) [with Container = Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> >; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:47:37:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:66:51:   required from ‘stan::math::log<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > >(const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >&)::<lambda(const auto:169&)> [with auto:169 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::apply(const T&, const F&) [with F = stan::math::log<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > > >(const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >&)::<lambda(const auto:169&)>; T2 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >; stan::require_t<stan::is_eigen_array<typename stan::plain_type<T2, void>::type> >* <anonymous> = 0; T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:65:46:   required from ‘auto stan::math::log(const Container&) [with Container = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Select<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::Array<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, 3, 1> >, Eigen::Array<double, 3, 1> > >; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:49:25:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lmgamma.hpp:58:75:   required from ‘stan::return_type_t<T> stan::math::lmgamma(int, T) [with T = double; stan::require_arithmetic_t<T>* <anonymous> = 0; stan::return_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/lmgamma.hpp:16:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lmgamma.hpp:58:32:   required from ‘stan::return_type_t<T> stan::math::lmgamma(int, T) [with T = double; stan::require_arithmetic_t<T>* <anonymous> = 0; stan::return_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/lmgamma.hpp:16:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_scalar_unary.hpp:62:23:   required from ‘static auto stan::math::apply_scalar_unary<F, T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp2>::type>::value, void>::type>::apply(const T&) [with F = stan::math::lgamma_fun; T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_scalar_unary.hpp:72:38:   required from ‘struct stan::math::apply_scalar_unary<stan::math::lgamma_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, void>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lgamma.hpp:120:50:   required from ‘auto stan::math::lgamma(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::linspaced_op<double>, Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >; stan::require_not_var_matrix_t<Container>* <anonymous> = 0; stan::require_not_nonscalar_prim_or_rev_kernel_expression_t<Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/lmgamma.hpp:58:29:   required from ‘stan::return_type_t<T> stan::math::lmgamma(int, T) [with T = double; stan::require_arithmetic_t<T>* <anonymous> = 0; stan::return_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/lmgamma.hpp:16:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:98:40:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/variance.hpp:28:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, -1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, -1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Array<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Array<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Array<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Array.h:45:7:   required from ‘class Eigen::Array<double, -1, -1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/SelfCwiseBinaryOp.h:27:67:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator+=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:280:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/SelfCwiseBinaryOp.h:27:67:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator+=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1> >; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_fullrank.hpp:280:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/BooleanRedux.h:156:22:   required from ‘bool Eigen::DenseBase<Derived>::allFinite() const [with Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/mcmc/covar_adaptation.hpp:31:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::value_of_rec<Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >(Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >&&)::<lambda(auto:1&)>::<lambda(auto:2)>, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::value_of_rec<Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >(Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >&&)::<lambda(auto:1&)>::<lambda(auto:2)>, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<stan::math::value_of_rec<Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >(Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >&&)::<lambda(auto:1&)>::<lambda(auto:2)>, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::value_of_rec<Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >(Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >&&)::<lambda(auto:1&)>::<lambda(auto:2)>, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::value_of_rec<Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >(Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >&&)::<lambda(auto:1&)>::<lambda(auto:2)>, const Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of_rec.hpp:110:66:   required from ‘stan::math::value_of_rec<Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >(Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >&&)::<lambda(auto:1&)> [with auto:1 = Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::math::value_of_rec<Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> > >(Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >&&)::<lambda(auto:1&)>; Args = {Eigen::Map<const Eigen::Array<int, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of_rec.hpp:108:21:   required from ‘auto stan::math::value_of_rec(T&&) [with T = Eigen::Map<const Eigen::Array<int, -1, 1>, 0, Eigen::Stride<0, 0> >; <template-parameter-1-2> = void; <template-parameter-1-3> = void]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_greater_or_equal.hpp:157:30:   required from ‘void stan::math::check_greater_or_equal(const char*, const char*, const T_y&, const T_low&, Idxs ...) [with T_y = std::vector<int>; T_low = int; stan::require_vector_t<T_y>* <anonymous> = 0; stan::require_not_std_vector_vt<stan::is_container_or_var_matrix, T_y>* <anonymous> = 0; stan::require_stan_scalar_t<V>* <anonymous> = 0; Idxs = {}]’
stanExports_negBinomial_MPI.h:922:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 2>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<double, 2, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 2, 1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_2F1.hpp:181:31:   required from ‘stan::return_type_t<Ta1, Ta1, Tb, Tz> stan::math::hypergeometric_2F1(const Ta1&, const Ta2&, const Tb&, const Tz&) [with Ta1 = double; Ta2 = double; Tb = double; Tz = double; ScalarT = double; OptT = boost::optional<double>; stan::require_all_arithmetic_t<Ta1, Ta2, Tb, Tz>* <anonymous> = 0; stan::return_type_t<Ta1, Ta1, Tb, Tz> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:190:39:   required from ‘TupleT stan::math::internal::grad_2F1_impl(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool calc_a1 = true; bool calc_a2 = true; bool calc_b1 = true; bool calc_z = true; T1 = double; T2 = double; T3 = double; T_z = double; ScalarT = double; TupleT = std::tuple<double, double, double, double>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:306:57:   required from ‘auto stan::math::grad_2F1(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool ReturnSameT = true; T1 = double; T2 = double; T3 = double; T_z = double; stan::require_t<std::integral_constant<bool, __v> >* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_inc_beta.hpp:37:25:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 2, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 2, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 2, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 2, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 2, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 2, 1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_2F1.hpp:181:31:   required from ‘stan::return_type_t<Ta1, Ta1, Tb, Tz> stan::math::hypergeometric_2F1(const Ta1&, const Ta2&, const Tb&, const Tz&) [with Ta1 = double; Ta2 = double; Tb = double; Tz = double; ScalarT = double; OptT = boost::optional<double>; stan::require_all_arithmetic_t<Ta1, Ta2, Tb, Tz>* <anonymous> = 0; stan::return_type_t<Ta1, Ta1, Tb, Tz> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:190:39:   required from ‘TupleT stan::math::internal::grad_2F1_impl(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool calc_a1 = true; bool calc_a2 = true; bool calc_b1 = true; bool calc_z = true; T1 = double; T2 = double; T3 = double; T_z = double; ScalarT = double; TupleT = std::tuple<double, double, double, double>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:306:57:   required from ‘auto stan::math::grad_2F1(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool ReturnSameT = true; T1 = double; T2 = double; T3 = double; T_z = double; stan::require_t<std::integral_constant<bool, __v> >* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_inc_beta.hpp:37:25:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 1, 1, 0, 1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 1, 1, 0, 1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 1, 1, 0, 1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 1, 1, 0, 1, 1>’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_2F1.hpp:182:31:   required from ‘stan::return_type_t<Ta1, Ta1, Tb, Tz> stan::math::hypergeometric_2F1(const Ta1&, const Ta2&, const Tb&, const Tz&) [with Ta1 = double; Ta2 = double; Tb = double; Tz = double; ScalarT = double; OptT = boost::optional<double>; stan::require_all_arithmetic_t<Ta1, Ta2, Tb, Tz>* <anonymous> = 0; stan::return_type_t<Ta1, Ta1, Tb, Tz> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:190:39:   required from ‘TupleT stan::math::internal::grad_2F1_impl(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool calc_a1 = true; bool calc_a2 = true; bool calc_b1 = true; bool calc_z = true; T1 = double; T2 = double; T3 = double; T_z = double; ScalarT = double; TupleT = std::tuple<double, double, double, double>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:306:57:   required from ‘auto stan::math::grad_2F1(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool ReturnSameT = true; T1 = double; T2 = double; T3 = double; T_z = double; stan::require_t<std::integral_constant<bool, __v> >* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_inc_beta.hpp:37:25:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, 3, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, 3, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, 3, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, 3, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, 3, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:117:39:   required from ‘TupleT stan::math::internal::grad_2F1_impl_ab(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool calc_a1 = true; bool calc_a2 = true; bool calc_b1 = true; T1 = double; T2 = double; T3 = double; T_z = double; ScalarT = double; TupleT = std::tuple<double, double, double>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:204:78:   required from ‘TupleT stan::math::internal::grad_2F1_impl(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool calc_a1 = true; bool calc_a2 = true; bool calc_b1 = true; bool calc_z = true; T1 = double; T2 = double; T3 = double; T_z = double; ScalarT = double; TupleT = std::tuple<double, double, double, double>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_2F1.hpp:306:57:   required from ‘auto stan::math::grad_2F1(const T1&, const T2&, const T3&, const T_z&, double, int) [with bool ReturnSameT = true; T1 = double; T2 = double; T3 = double; T_z = double; stan::require_t<std::integral_constant<bool, __v> >* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/grad_inc_beta.hpp:37:25:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:62:1:   required by substitution of ‘template<class NewType> typename Eigen::DenseBase<Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >::CastXpr<NewType>::Type Eigen::DenseBase<Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >::cast() const [with NewType = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_row.hpp:102:38:   required from ‘Eigen::Matrix<typename stan::return_type<T1, T2>::type, -1, 1> stan::math::append_row(const ColVec&, const Scal&) [with ColVec = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Scal = double; stan::require_t<stan::is_eigen_col_vector<T> >* <anonymous> = 0; stan::require_stan_scalar_t<V>* <anonymous> = 0; typename stan::return_type<T1, T2>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:29:31:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/BooleanRedux.h:142:28:   required from ‘bool Eigen::DenseBase<Derived>::hasNaN() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/BooleanRedux.h:156:40:   required from ‘bool Eigen::DenseBase<Derived>::allFinite() const [with Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/mcmc/covar_adaptation.hpp:31:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/BooleanRedux.h:142:28:   required from ‘bool Eigen::DenseBase<Derived>::hasNaN() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/BooleanRedux.h:156:40:   required from ‘bool Eigen::DenseBase<Derived>::allFinite() const [with Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/mcmc/var_adaptation.hpp:30:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, -1>, 1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Matrix<double, -1, -1>, 1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>’
/mnt/library/StanHeaders/include/src/stan/services/sample/standalone_gqs.hpp:72:0:   required from ‘int stan::services::standalone_generate(const Model&, const Eigen::MatrixXd&, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::MatrixXd = Eigen::Matrix<double, -1, -1>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1253:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::standalone_gqs(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:30:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
In file included from /mnt/library/BH/include/boost/concept/assert.hpp:35,
                 from /mnt/library/BH/include/boost/concept_check.hpp:20,
                 from /mnt/library/BH/include/boost/range/concepts.hpp:19,
                 from /mnt/library/BH/include/boost/range/size_type.hpp:20,
                 from /mnt/library/BH/include/boost/range/size.hpp:21,
                 from /mnt/library/BH/include/boost/range/functions.hpp:20,
                 from /mnt/library/BH/include/boost/range.hpp:18,
                 from /mnt/library/BH/include/boost/numeric/odeint/util/resize.hpp:24:
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /mnt/library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /mnt/library/BH/include/boost/algorithm/string.hpp:23,
                 from /mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:4,
                 from /mnt/library/rstan/include/rstan/stan_fit.hpp:46:
/mnt/library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<const char*, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = detail::first_finderF<const char*, is_equal>; FormatterT = detail::const_formatF<boost::iterator_range<const char*> >]’
/mnt/library/BH/include/boost/algorithm/string/replace.hpp:179:44:   required from ‘void boost::algorithm::replace_first(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = char [11]; Range2T = char [1]]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:133:29:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<const char*, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<const char*> >, boost::algorithm::detail::first_finderF<const char*, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = detail::first_finderF<const char*, is_equal>; FormatterT = detail::const_formatF<boost::iterator_range<const char*> >]’
/mnt/library/BH/include/boost/algorithm/string/replace.hpp:179:44:   required from ‘void boost::algorithm::replace_first(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = char [11]; Range2T = char [1]]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:133:29:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<const char*> >; FinderT = boost::algorithm::detail::first_finderF<const char*, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorBlock.h:56:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, -1>’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:563:19:   required from ‘Eigen::ComputationInfo Eigen::internal::computeFromTridiagonal_impl(DiagType&, SubDiagType&, Eigen::Index, bool, MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagType = Eigen::Matrix<double, -1, 1>; SubDiagType = Eigen::Matrix<double, -1, 1>; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:460:49:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseUnaryOp<scalar_exp_op<double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:92:26:   required from ‘stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)> [with auto:304 = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:93:13:   required from ‘static auto stan::math::apply_vector_unary<T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp>::type>::value, void>::type>::reduce(const T&, const F&) [with F = stan::math::log_sum_exp<Eigen::Matrix<double, -1, 1> >(const Eigen::Matrix<double, -1, 1>&)::<lambda(const auto:304&)>; T = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log_sum_exp.hpp:83:39:   required from ‘auto stan::math::log_sum_exp(const T&) [with T = Eigen::Matrix<double, -1, 1>; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/dirichlet_rng.hpp:59:35:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:330:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘class Eigen::internal::gebp_traits<double, double, false, false, 1, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:72:102:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  432 |     Vectorizable = unpacket_traits<_LhsPacket>::vectorizable && unpacket_traits<_RhsPacket>::vectorizable,
      |                                                 ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  432 |     Vectorizable = unpacket_traits<_LhsPacket>::vectorizable && unpacket_traits<_RhsPacket>::vectorizable,
      |                                                                                              ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  433 |     LhsPacketSize = Vectorizable ? unpacket_traits<_LhsPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  434 |     RhsPacketSize = Vectorizable ? unpacket_traits<_RhsPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  435 |     ResPacketSize = Vectorizable ? unpacket_traits<_ResPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  460 |   typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  461 |   typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  462 |   typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  465 |   typedef QuadPacket<RhsPacket> RhsPacketx4;
      |                                 ^~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘class Eigen::internal::gebp_traits<double, double, false, false, 1, 1>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1080:42:   required from ‘struct Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0, 1>, 4, 4, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:92:109:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  432 |     Vectorizable = unpacket_traits<_LhsPacket>::vectorizable && unpacket_traits<_RhsPacket>::vectorizable,
      |                                                 ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  432 |     Vectorizable = unpacket_traits<_LhsPacket>::vectorizable && unpacket_traits<_RhsPacket>::vectorizable,
      |                                                                                              ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  433 |     LhsPacketSize = Vectorizable ? unpacket_traits<_LhsPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  434 |     RhsPacketSize = Vectorizable ? unpacket_traits<_RhsPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  435 |     ResPacketSize = Vectorizable ? unpacket_traits<_ResPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  460 |   typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  461 |   typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  462 |   typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  465 |   typedef QuadPacket<RhsPacket> RhsPacketx4;
      |                                 ^~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘class Eigen::internal::gebp_traits<double, double, false, false, 1, 2>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1085:45:   required from ‘struct Eigen::internal::gebp_kernel<double, double, long int, Eigen::internal::blas_data_mapper<double, long int, 0, 0, 1>, 4, 4, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:92:109:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:425:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  425 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:426:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  426 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:427:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  427 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:384:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
  384 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  432 |     Vectorizable = unpacket_traits<_LhsPacket>::vectorizable && unpacket_traits<_RhsPacket>::vectorizable,
      |                                                 ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:49: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  432 |     Vectorizable = unpacket_traits<_LhsPacket>::vectorizable && unpacket_traits<_RhsPacket>::vectorizable,
      |                                                                                              ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:432:94: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  433 |     LhsPacketSize = Vectorizable ? unpacket_traits<_LhsPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:433:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  434 |     RhsPacketSize = Vectorizable ? unpacket_traits<_RhsPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:434:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  435 |     ResPacketSize = Vectorizable ? unpacket_traits<_ResPacket>::size : 1,
      |                                                                 ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:435:65: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  460 |   typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:460:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  461 |   typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:461:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  462 |   typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:462:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
  465 |   typedef QuadPacket<RhsPacket> RhsPacketx4;
      |                                 ^~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:465:33: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/CommaInitializer.h:159:10:   required from ‘Eigen::CommaInitializer<Derived> Eigen::DenseBase<Derived>::operator<<(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_row.hpp:102:10:   required from ‘Eigen::Matrix<typename stan::return_type<T1, T2>::type, -1, 1> stan::math::append_row(const ColVec&, const Scal&) [with ColVec = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Scal = double; stan::require_t<stan::is_eigen_col_vector<T> >* <anonymous> = 0; stan::require_stan_scalar_t<V>* <anonymous> = 0; typename stan::return_type<T1, T2>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:29:31:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::Matrix<double, -1, 1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:478:32:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::mean() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/variance.hpp:25:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, -1>’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:451:40:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:514:91:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorBlock.h:56:47:   required from ‘class Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, -1>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:514:101:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:191:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:34:44:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_base_pointer_convertible.hpp:29:17:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_var_matrix.hpp:79:8:   required from ‘struct stan::is_any_var_matrix<const Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, -1, 0, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/rev/meta/return_var_matrix.hpp:22:7:   required by substitution of ‘template<class ReturnType, class ... Types> using stan::return_var_matrix_t = std::conditional_t<stan::is_any_var_matrix<ReturnType, Types ...>::value, stan::math::var_value<typename stan::math::promote_scalar_type<double, typename std::decay<typename stan::plain_type<T>::type>::type, void>::type>, typename stan::math::promote_scalar_type<stan::math::var_value<double>, typename std::decay<typename stan::plain_type<T>::type>::type, void>::type> [with ReturnType = const Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>; Types = {Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, -1, 0, -1, -1>}]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:36:11:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:40:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:43:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:54:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:54:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, -1>&>(const Eigen::Matrix<var_value<double>, -1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, -1>&>(const Eigen::Matrix<var_value<double>, -1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, -1>&>(const Eigen::Matrix<var_value<double>, -1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, -1>&>(const Eigen::Matrix<var_value<double>, -1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, -1>&>(const Eigen::Matrix<var_value<double>, -1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of.hpp:75:75:   required from ‘stan::math::value_of<const Eigen::Matrix<var_value<double>, -1, -1>&>(const Eigen::Matrix<var_value<double>, -1, -1>&)::<lambda(auto:11&)> [with auto:11 = const Eigen::Matrix<stan::math::var_value<double>, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:56:58:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:53:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:37:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::value_of<arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&>(arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::value_of<arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&>(arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<stan::math::value_of<arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&>(arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::value_of<arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&>(arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::value_of<arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&>(arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of.hpp:75:75:   required from ‘stan::math::value_of<arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&>(arena_matrix<Eigen::Matrix<var_value<double>, -1, -1>, void>&)::<lambda(auto:11&)> [with auto:11 = stan::math::arena_matrix<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, void>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:66:48:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_base_pointer_convertible.hpp:29:17:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_var_matrix.hpp:79:8:   required from ‘struct stan::is_any_var_matrix<const Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, -1, 0, -1, -1> >’
/mnt/library/StanHeaders/include/stan/math/rev/meta/return_var_matrix.hpp:22:7:   required by substitution of ‘template<class ReturnType, class ... Types> using stan::return_var_matrix_t = std::conditional_t<stan::is_any_var_matrix<ReturnType, Types ...>::value, stan::math::var_value<typename stan::math::promote_scalar_type<double, typename std::decay<typename stan::plain_type<T>::type>::type, void>::type>, typename stan::math::promote_scalar_type<stan::math::var_value<double>, typename std::decay<typename stan::plain_type<T>::type>::type, void>::type> [with ReturnType = const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>; Types = {Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, -1, 0, -1, -1>}]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:65:11:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:46:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:145:56:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:145:64:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:145:43:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:145:43:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:150:39:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:163:26:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:163:40:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, 1, -1, 1, 1, -1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, 1, -1, 1, 1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Array<double, 1, -1, 1, 1, -1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Array<double, 1, -1, 1, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::Array<double, 1, -1, 1, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:163:29:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, 1, -1>&>(const Eigen::Matrix<var_value<double>, 1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, 1, -1>&>(const Eigen::Matrix<var_value<double>, 1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, 1, -1>&>(const Eigen::Matrix<var_value<double>, 1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::value_of<const Eigen::Matrix<var_value<double>, 1, -1>&>(const Eigen::Matrix<var_value<double>, 1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, 1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::value_of<const Eigen::Matrix<var_value<double>, 1, -1>&>(const Eigen::Matrix<var_value<double>, 1, -1>&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::Matrix<stan::math::var_value<double>, 1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of.hpp:75:75:   required from ‘stan::math::value_of<const Eigen::Matrix<var_value<double>, 1, -1>&>(const Eigen::Matrix<var_value<double>, 1, -1>&)::<lambda(auto:11&)> [with auto:11 = const Eigen::Matrix<stan::math::var_value<double>, 1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:168:61:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:170:58:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:170:43:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:172:43:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = var_value<double>; T2 = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_not_matrix_t<T1>* <anonymous> = 0; stan::require_matrix_t<Mat>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/StanHeaders/include/stan/math/rev/core/operator_addition.hpp:223:33:   required from ‘auto stan::math::add(const Var&, const VarMat&) [with Var = var_value<double>; VarMat = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_var_vt<std::is_arithmetic, Var>* <anonymous> = 0; stan::require_rev_matrix_t<VarMat>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/core/operator_addition.hpp:250:13:   required from ‘auto stan::math::add(const VarMat&, const Var&) [with Var = var_value<double>; VarMat = Eigen::Matrix<var_value<double>, 1, -1>; stan::require_var_vt<std::is_arithmetic, Var>* <anonymous> = 0; stan::require_rev_matrix_t<VarMat>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1241:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:49:18:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, 1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:681:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, 1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, 1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   required from ‘struct Eigen::internal::cast_return_type<Eigen::Matrix<double, 1, -1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:48:179:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:49:53:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, 1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:681:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   required from ‘struct Eigen::internal::cast_return_type<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:48:179:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:50:54:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, 1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:681:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:49:18:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, -1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:684:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   required from ‘struct Eigen::internal::cast_return_type<Eigen::Matrix<double, -1, -1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:48:179:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:49:53:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, -1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:684:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   required from ‘struct Eigen::internal::cast_return_type<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:48:179:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:50:54:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, -1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:684:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, member_sum<double, double>, 1>; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; Func = Eigen::internal::scalar_max_op<double, double, 0>; Evaluator = Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_max_op<double, double, 0>; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:448:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with int NaNPropagation = 0; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:466:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:106:49:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/PartialReduxEvaluator.h:203:15:   required from ‘PacketType Eigen::internal::evaluator<Eigen::PartialReduxExpr<MatrixType, MemberOp, Direction> >::packet(Eigen::Index) const [with int LoadMode = 0; PacketType = __vector(2) double; ArgType = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; MemberOp = Eigen::internal::member_sum<double, double>; int Direction = 1; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:251:78:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; Func = Eigen::internal::scalar_max_op<double, double, 0>; Evaluator = Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_max_op<double, double, 0>; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:448:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with int NaNPropagation = 0; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:466:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:106:49:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:277:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 2, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PartialReduxEvaluator.h:217:20:   required from ‘PacketType Eigen::internal::evaluator<Eigen::PartialReduxExpr<MatrixType, MemberOp, Direction> >::packet(Eigen::Index) const [with int LoadMode = 0; PacketType = __vector(2) double; ArgType = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; MemberOp = Eigen::internal::member_sum<double, double>; int Direction = 1; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:251:78:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; Func = Eigen::internal::scalar_max_op<double, double, 0>; Evaluator = Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_max_op<double, double, 0>; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:448:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with int NaNPropagation = 0; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:466:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:106:49:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/PartialReduxEvaluator.h:183:72:   required from ‘const Eigen::internal::evaluator<Eigen::PartialReduxExpr<MatrixType, MemberOp, Direction> >::Scalar Eigen::internal::evaluator<Eigen::PartialReduxExpr<MatrixType, MemberOp, Direction> >::coeff(Eigen::Index) const [with ArgType = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; MemberOp = Eigen::internal::member_sum<double, double>; int Direction = 1; Scalar = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:268:34:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; Func = Eigen::internal::scalar_max_op<double, double, 0>; Evaluator = Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_max_op<double, double, 0>; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:448:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with int NaNPropagation = 0; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:466:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:106:49:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘void Eigen::internal::gemm_pack_rhs<Scalar, Index, DataMapper, nr, 0, Conjugate, PanelMode>::operator()(Scalar*, const DataMapper&, Index, Index, Index, Index) [with Scalar = double; Index = long int; DataMapper = Eigen::internal::const_blas_data_mapper<double, long int, 0>; int nr = 4; bool Conjugate = false; bool PanelMode = false]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:100:15:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2459:62: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2459 |           PacketBlock<Packet,(PacketSize%4)==0?4:PacketSize> kernel;
      |                                                              ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘void Eigen::internal::gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, Packet, 1, Conjugate, PanelMode>::operator()(Scalar*, const DataMapper&, Index, Index, Index, Index) [with Scalar = double; Index = long int; DataMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; int Pack1 = 4; int Pack2 = 2; Packet = __vector(2) double; bool Conjugate = false; bool PanelMode = false]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:106:17:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2256:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2256 |   typedef typename unpacket_traits<typename unpacket_traits<Packet>::half>::half QuarterPacket;
      |                                                                                  ^~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2258:56: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2258 |          HalfPacketSize = unpacket_traits<HalfPacket>::size,
      |                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2259:62: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2259 |          QuarterPacketSize = unpacket_traits<QuarterPacket>::size,
      |                                                              ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2259:62: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2298:39: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2298 |               PacketBlock<HalfPacket> kernel_half;
      |                                       ^~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2298:39: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2304:42: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2304 |               PacketBlock<QuarterPacket> kernel_quarter;
      |                                          ^~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2304:42: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2304:42: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2304:42: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘void Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, DataMapper, mr, nr, ConjugateLhs, ConjugateRhs>::operator()(const DataMapper&, const LhsScalar*, const RhsScalar*, Index, Index, Index, ResScalar, Index, Index, Index, Index) [with LhsScalar = double; RhsScalar = double; Index = long int; DataMapper = Eigen::internal::blas_data_mapper<double, long int, 0, 0, 1>; int mr = 4; int nr = 4; bool ConjugateLhs = false; bool ConjugateRhs = false; ResScalar = double]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:113:15:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1920:103: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 1920 |           const int SResPacketHalfSize = unpacket_traits<typename unpacket_traits<SResPacket>::half>::size;
      |                                                                                                       ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1921:138: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 1921 |           const int SResPacketQuarterSize = unpacket_traits<typename unpacket_traits<typename unpacket_traits<SResPacket>::half>::half>::size;
      |                                                                                                                                          ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1921:138: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1977:135: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 1977 |               typedef typename conditional<SwappedTraits::LhsProgress>=8,typename unpacket_traits<SResPacket>::half,SResPacket>::type SResPacketHalf;
      |                                                                                                                                       ^~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1978:135: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 1978 |               typedef typename conditional<SwappedTraits::LhsProgress>=8,typename unpacket_traits<SLhsPacket>::half,SLhsPacket>::type SLhsPacketHalf;
      |                                                                                                                                       ^~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1979:135: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 1979 |               typedef typename conditional<SwappedTraits::LhsProgress>=8,typename unpacket_traits<SRhsPacket>::half,SRhsPacket>::type SRhsPacketHalf;
      |                                                                                                                                       ^~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:1980:135: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 1980 |               typedef typename conditional<SwappedTraits::LhsProgress>=8,typename unpacket_traits<SAccPacket>::half,SAccPacket>::type SAccPacketHalf;
      |                                                                                                                                       ^~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 16>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<double, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 4, 4>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:155:52:   required from ‘void Eigen::internal::tribb_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjLhs, ConjRhs, ResInnerStride, UpLo>::operator()(ResScalar*, Index, Index, const LhsScalar*, const RhsScalar*, Index, Index, const ResScalar&) [with LhsScalar = double; RhsScalar = double; Index = long int; int mr = 4; int nr = 4; bool ConjLhs = false; bool ConjRhs = false; int ResInnerStride = 1; int UpLo = 2; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:116:13:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 4>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 4>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 4>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:116:13:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseUnaryOp<scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:98:46:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/variance.hpp:28:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:370:46:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:370:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:325:26:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:325:43:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:352:35:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:358:80:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::DiagonalWrapper<const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::DiagonalWrapper<const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::DiagonalWrapper<const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::DiagonalWrapper<const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 1, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::DiagonalWrapper<const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::DiagonalWrapper<const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:358:67:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:126:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0, 6>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:359:35:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:32:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:379:56:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:387:32:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/multiply.hpp:84:12:   required from ‘auto stan::math::multiply(Scal, const Mat&) [with Scal = double; Mat = Eigen::Matrix<double, 1, -1>; stan::require_stan_scalar_t<T>* <anonymous> = 0; stan::require_eigen_t<T>* <anonymous> = 0; stan::require_all_not_st_var<Mat1, Mat2>* <anonymous> = 0; stan::require_all_not_complex_t<Scal, typename stan::value_type<T_actual, void>::type>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1242:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/add.hpp:61:18:   required from ‘auto stan::math::add(const Mat&, Scal) [with Mat = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >; Scal = double; stan::require_eigen_t<T_desired>* <anonymous> = 0; stan::require_stan_scalar_t<V>* <anonymous> = 0; stan::require_all_not_st_var<Mat1, Mat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1241:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/add.hpp:61:21:   required from ‘auto stan::math::add(const Mat&, Scal) [with Mat = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >; Scal = double; stan::require_eigen_t<T_desired>* <anonymous> = 0; stan::require_stan_scalar_t<V>* <anonymous> = 0; stan::require_all_not_st_var<Mat1, Mat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1241:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:140:7:   required from ‘class Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/add.hpp:61:32:   required from ‘auto stan::math::add(const Mat&, Scal) [with Mat = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> >; Scal = double; stan::require_eigen_t<T_desired>* <anonymous> = 0; stan::require_stan_scalar_t<V>* <anonymous> = 0; stan::require_all_not_st_var<Mat1, Mat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1241:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_linesearch.hpp:247:0:   required from ‘int stan::optimization::WolfeLineSearch(FunctorType&, Scalar&, XType&, Scalar&, XType&, const XType&, const XType&, const Scalar&, const XType&, const Scalar&, const Scalar&, const Scalar&, const Scalar&, const Scalar&) [with FunctorType = ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; Scalar = double; XType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:209:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:34:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0, 5>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0>’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:34:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, 0> >’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:34:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> >’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:55:0:   required from ‘void stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::search_direction(VectorT&, const VectorT&) const [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:254:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> > >(Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> > >(Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> > >(Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::value_of<Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> > >(Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<const Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> > >(Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of.hpp:75:75:   required from ‘stan::math::value_of<Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> > >(Eigen::ArrayWrapper<const Eigen::Matrix<var_value<double>, -1, 1> >&&)::<lambda(auto:11&)> [with auto:11 = Eigen::ArrayWrapper<const Eigen::Matrix<stan::math::var_value<double>, -1, 1> >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:44:64:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:68:18:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:68:28:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:31:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:55:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_scalar_unary.hpp:62:23:   required from ‘static auto stan::math::apply_scalar_unary<F, T, typename std::enable_if<stan::is_eigen<typename std::decay<_Tp2>::type>::value, void>::type>::apply(const T&) [with F = stan::math::erfc_fun; T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_scalar_unary.hpp:72:38:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:19:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:66:51:   required from ‘stan::math::log<Eigen::CwiseUnaryOp<apply_scalar_unary<erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >(const Eigen::CwiseUnaryOp<apply_scalar_unary<erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >&)::<lambda(const auto:169&)> [with auto:169 = Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:14:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/square.hpp:70:54:   required from ‘stan::math::square<Eigen::Array<double, -1, 1> >(const Eigen::Array<double, -1, 1>&)::<lambda(const auto:239&)> [with auto:239 = Eigen::Array<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:82:23:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/square.hpp:70:54:   required from ‘stan::math::square<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(const auto:239&)> [with auto:239 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:87:28:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:88:26:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:88:30:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/exp.hpp:63:51:   required from ‘stan::math::exp<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > >(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> >&)::<lambda(const auto:215&)> [with auto:215 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:88:25:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:92:63:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:49:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:34:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:62:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:98:37:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:107:18:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:108:14:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:109:13:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:112:48:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > > >(Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > > >(Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > > >(Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::value_of<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > > >(Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::value_of<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > > >(Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > >&&)::<lambda(auto:11&)>::<lambda(const auto:12&)>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/value_of.hpp:75:75:   required from ‘stan::math::value_of<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > > >(Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<var_value<double>, 1, -1> > >&&)::<lambda(auto:11&)> [with auto:11 = Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<stan::math::var_value<double>, 1, -1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:65:64:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:75:62:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/fabs.hpp:67:51:   required from ‘stan::math::fabs<Eigen::Array<double, -1, 1> >(const Eigen::Array<double, -1, 1>&)::<lambda(const auto:9&)> [with auto:9 = Eigen::Array<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:76:35:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:78:67:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:93:68:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::Array<double, -1, 1>, void>::apply(const Eigen::Array<double, -1, 1>&)::<lambda(auto:3&&)>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:95:35:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:102:58:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:102:43:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:77:50:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = int; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1236:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:96:35:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = int; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1236:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:99:45:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = int; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1236:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:99:59:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = int; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1236:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:77:40:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = Eigen::Matrix<var_value<double>, 1, -1>; T_scale = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:77:50:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = Eigen::Matrix<var_value<double>, 1, -1>; T_scale = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:99:59:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = Eigen::Matrix<var_value<double>, 1, -1>; T_scale = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/sum.hpp:49:43:   required from ‘stan::math::var stan::math::sum(const T&) [with T = Eigen::Matrix<var_value<double>, -1, 1>; stan::require_rev_matrix_t<T>* <anonymous> = 0; var = var_value<double>]’
stanExports_negBinomial_MPI.h:1245:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/sum.hpp:50:19:   required from ‘stan::math::var stan::math::sum(const T&) [with T = Eigen::Matrix<var_value<double>, -1, 1>; stan::require_rev_matrix_t<T>* <anonymous> = 0; var = var_value<double>]’
stanExports_negBinomial_MPI.h:1245:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:363:59:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:268:7:   required from ‘Eigen::MapBase<Derived, 1>::ScalarWithConstIfNotLvalue& Eigen::MapBase<Derived, 1>::coeffRef(Eigen::Index) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; ScalarWithConstIfNotLvalue = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:367:25:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Jacobi/Jacobi.h:475:5:   required from ‘void Eigen::internal::apply_rotation_in_the_plane(Eigen::DenseBase<Derived>&, Eigen::DenseBase<Derived>&, const Eigen::JacobiRotation<OtherScalar>&) [with VectorX = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>; VectorY = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>; OtherScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Jacobi/Jacobi.h:315:40:   required from ‘void Eigen::MatrixBase<Derived>::applyOnTheRight(Eigen::Index, Eigen::Index, const Eigen::JacobiRotation<OtherScalar>&) [with OtherScalar = double; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:895:24:   required from ‘void Eigen::internal::tridiagonal_qr_step(RealScalar*, RealScalar*, Index, Index, Scalar*, Index) [with int StorageOrder = 0; RealScalar = double; Scalar = double; Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:548:87:   required from ‘Eigen::ComputationInfo Eigen::internal::computeFromTridiagonal_impl(DiagType&, SubDiagType&, Eigen::Index, bool, MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagType = Eigen::Matrix<double, -1, 1>; SubDiagType = Eigen::Matrix<double, -1, 1>; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:460:49:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Visitor.h:79:51:   required from ‘class Eigen::internal::visitor_evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Visitor.h:123:17:   required from ‘void Eigen::DenseBase<Derived>::visit(Visitor&) const [with Visitor = Eigen::internal::min_coeff_visitor<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Visitor.h:323:14:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::minCoeff(IndexType*) const [with int NaNPropagation = 0; IndexType = long int; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:496:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::minCoeff(IndexType*) const [with IndexType = long int; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:563:35:   required from ‘Eigen::ComputationInfo Eigen::internal::computeFromTridiagonal_impl(DiagType&, SubDiagType&, Eigen::Index, bool, MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagType = Eigen::Matrix<double, -1, 1>; SubDiagType = Eigen::Matrix<double, -1, 1>; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:460:49:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:221:22:   required from ‘static typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::internal::lpNorm_selector<Derived, 1>::run(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:269:52:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::lpNorm() const [with int p = 1; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:514:74:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:221:22:   required from ‘static typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::internal::lpNorm_selector<Derived, 1>::run(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:269:52:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::lpNorm() const [with int p = 1; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:514:125:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1384:41:   required from ‘struct Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1464:8:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:379:74:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1384:41:   required from ‘struct Eigen::internal::evaluator_wrapper_base<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1464:8:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<double, double, Eigen::internal::cmp_EQ>, const Eigen::ArrayWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:387:50:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:68:28:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:88:30:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/exp.hpp:63:51:   required from ‘stan::math::exp<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<apply_scalar_unary<erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<apply_scalar_unary<erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >&)::<lambda(const auto:215&)> [with auto:215 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:92:63:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:49:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:34:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:62:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:98:37:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:107:18:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:108:14:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:109:13:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:112:48:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, 1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, 1, -1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/as_column_vector_or_scalar.hpp:60:55:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/as_array_or_scalar.hpp:57:51:   required from ‘stan::math::as_array_or_scalar<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >(Eigen::Transpose<const Eigen::Matrix<double, 1, -1> >&&)::<lambda(auto:13&)> [with auto:13 = Eigen::Transpose<const Eigen::Matrix<double, 1, -1> >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:75:62:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/fabs.hpp:67:51:   required from ‘stan::math::fabs<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(const auto:9&)> [with auto:9 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_vector_unary.hpp:53:76:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:78:67:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:93:68:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::sign_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:95:35:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:102:58:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:102:43:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:77:40:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = int; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1236:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:77:50:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = int; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1236:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/as_column_vector_or_scalar.hpp:60:55:   required from ‘stan::math::as_column_vector_or_scalar<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >&>(const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >&)::<lambda(auto:4&)> [with auto:4 = const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/as_array_or_scalar.hpp:57:51:   required from ‘stan::math::as_array_or_scalar<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > >(Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >&&)::<lambda(auto:13&)> [with auto:13 = Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::math::as_array_or_scalar<Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > > >(Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >&&)::<lambda(auto:13&)>; Args = {Eigen::Transpose<const Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1, 1, 1, -1> >, const Eigen::Matrix<double, 1, -1, 1, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > > >}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/as_array_or_scalar.hpp:57:21:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:77:40:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:77:50:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = false; T_y = Eigen::Matrix<double, -1, 1>; T_loc = Eigen::MatrixWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::ArrayWrapper<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> > > >; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = double]’
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/model/indexing/rvalue.hpp:158:0:   required from ‘stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)> [with auto:767 = const Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>; Args = {const Eigen::Matrix<double, -1, 1, 0, -1, 1>&}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/rvalue.hpp:156:0:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1248:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   required from ‘struct Eigen::internal::cast_return_type<Eigen::Matrix<double, -1, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:48:179:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1248:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   required from ‘struct Eigen::internal::cast_return_type<Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<const Eigen::Matrix<double, -1, 1>&>(const Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:48:179:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1248:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:513:38:   required from ‘struct Eigen::internal::cast_return_type<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:48:179:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1248:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:37:44:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:199:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/accumulator.hpp:135:50:   required from ‘stan::math::var stan::math::accumulator<T, typename std::enable_if<stan::is_var<typename std::decay<_Tp>::type>::value, void>::type>::sum() const [with T = stan::math::var_value<double>; typename std::enable_if<stan::is_var<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = stan::math::var_value<double>; stan::math::var = stan::math::var_value<double>]’
stanExports_negBinomial_MPI.h:1257:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/src/stan/services/sample/standalone_gqs.hpp:72:0:   required from ‘int stan::services::standalone_generate(const Model&, const Eigen::MatrixXd&, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::MatrixXd = Eigen::Matrix<double, -1, -1>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1253:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::standalone_gqs(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:30:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:347:30:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 4>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:548:10:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h:116:13:   required from ‘static void Eigen::internal::general_matrix_matrix_triangular_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, UpLo, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, const ResScalar&, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 1; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int UpLo = 2; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:113:12:   required from ‘static void Eigen::selfadjoint_product_selector<MatrixType, OtherType, UpLo, false>::run(MatrixType&, const OtherType&, const typename MatrixType::Scalar&) [with MatrixType = Eigen::Matrix<double, -1, -1>; OtherType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; int UpLo = 2; typename MatrixType::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointProduct.h:126:62:   required from ‘Eigen::SelfAdjointView<MatrixType, UpLo>& Eigen::SelfAdjointView<MatrixType, Mode>::rankUpdate(const Eigen::MatrixBase<OtherDerived>&, const Scalar&) [with DerivedU = Eigen::Matrix<double, -1, -1, 1, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int UpLo = 2; Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:33:78:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::scalar_max_op<double, double, 0>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_max_op<double, double, 0>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:448:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with int NaNPropagation = 0; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:466:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:453:45:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:363:59:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:93:22:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:363:59:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:37:44:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:372:86:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:375:18:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointRank2Update.h:34:74:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:375:18:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointRank2Update.h:35:60:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:375:18:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointRank2Update.h:35:23:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:375:18:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, -1>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1248:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:86:7:   required from ‘class Eigen::SolveImpl<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Solve.h:62:7:   required from ‘class Eigen::Solve<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:53:0:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/src/stan/variational/families/normal_meanfield.hpp:388:0:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/variational/advi.hpp:223:0:   required from ‘double stan::variational::advi<Model, Q, BaseRNG>::adapt_eta(Q&, int, stan::callbacks::logger&) const [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Q = stan::variational::normal_meanfield; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/variational/advi.hpp:468:0:   required from ‘int stan::variational::advi<Model, Q, BaseRNG>::run(double, bool, int, double, int, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) const [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Q = stan::variational::normal_meanfield; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/services/experimental/advi/meanfield.hpp:82:0:   required from ‘int stan::services::experimental::advi::meanfield(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, double, double, bool, int, int, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:900:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/functor/operands_and_partials.hpp:67:0:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:115:28:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/functor/operands_and_partials.hpp:67:0:   required from ‘void stan::math::internal::update_adjoints(Matrix1&, const Matrix2&, const stan::math::var&) [with Matrix1 = stan::math::arena_matrix<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >; Matrix2 = stan::math::arena_matrix<Eigen::Matrix<double, -1, 1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0; stan::require_st_arithmetic<Op>* <anonymous> = 0; stan::math::var = stan::math::var_value<double>]’
/mnt/library/StanHeaders/include/stan/math/rev/functor/partials_propagator.hpp:91:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:115:28:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/functor/operands_and_partials.hpp:67:0:   required from ‘void stan::math::internal::update_adjoints(Matrix1&, const Matrix2&, const stan::math::var&) [with Matrix1 = stan::math::arena_matrix<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >; Matrix2 = stan::math::arena_matrix<Eigen::Matrix<double, -1, 1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0; stan::require_st_arithmetic<Op>* <anonymous> = 0; stan::math::var = stan::math::var_value<double>]’
/mnt/library/StanHeaders/include/stan/math/rev/functor/partials_propagator.hpp:91:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:115:28:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from ‘class Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/functor/operands_and_partials.hpp:67:0:   required from ‘void stan::math::internal::update_adjoints(Matrix1&, const Matrix2&, const stan::math::var&) [with Matrix1 = stan::math::arena_matrix<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, void>; Matrix2 = stan::math::arena_matrix<Eigen::Matrix<double, 1, -1>, void>; stan::require_rev_matrix_t<T>* <anonymous> = 0; stan::require_st_arithmetic<Op>* <anonymous> = 0; stan::math::var = stan::math::var_value<double>]’
/mnt/library/StanHeaders/include/stan/math/rev/functor/partials_propagator.hpp:91:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:105:28:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, 1, -1, 1, 1, -1> >, const Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/functor/operands_and_partials.hpp:67:0:   required from ‘void stan::math::internal::update_adjoints(Matrix1&, const Matrix2&, const stan::math::var&) [with Matrix1 = stan::math::arena_matrix<Eigen::Matrix<stan::math::var_value<double>, 1, -1>, void>; Matrix2 = stan::math::arena_matrix<Eigen::Matrix<double, 1, -1>, void>; stan::require_rev_matrix_t<T>* <anonymous> = 0; stan::require_st_arithmetic<Op>* <anonymous> = 0; stan::math::var = stan::math::var_value<double>]’
/mnt/library/StanHeaders/include/stan/math/rev/functor/partials_propagator.hpp:91:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:105:28:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, -1>, -1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorwiseOp.h:114:1:   required from ‘ResultType Eigen::internal::member_sum<ResultType, Scalar>::operator()(const XprType&) const [with XprType = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>; ResultType = double; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PartialReduxEvaluator.h:183:21:   required from ‘const Eigen::internal::evaluator<Eigen::PartialReduxExpr<MatrixType, MemberOp, Direction> >::Scalar Eigen::internal::evaluator<Eigen::PartialReduxExpr<MatrixType, MemberOp, Direction> >::coeff(Eigen::Index) const [with ArgType = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >; MemberOp = Eigen::internal::member_sum<double, double>; int Direction = 1; Scalar = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:268:34:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; Func = Eigen::internal::scalar_max_op<double, double, 0>; Evaluator = Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_max_op<double, double, 0>; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:448:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with int NaNPropagation = 0; Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:466:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff() const [with Derived = Eigen::PartialReduxExpr<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Matrix<double, -1, -1> >, Eigen::internal::member_sum<double, double>, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/matrix_exp_action_handler.hpp:106:49:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1, 1, -1, -1>, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1, 1, -1, -1>, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:370:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 1, -1, -1>, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:479:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:486:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:98:40:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:78:71:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:363:59:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, 1>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1043:41:   required from ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:564:45:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:269:52:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::lpNorm() const [with int p = 1; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:514:125:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:564:45:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:269:52:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::lpNorm() const [with int p = 1; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:514:125:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:564:45:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Visitor.h:79:51:   required from ‘class Eigen::internal::visitor_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Visitor.h:123:17:   required from ‘void Eigen::DenseBase<Derived>::visit(Visitor&) const [with Visitor = Eigen::internal::max_coeff_visitor<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >, 0>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>, -1, 1, false> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Visitor.h:374:14:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:325:54:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Rhs = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/NoAlias.h:59:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>; ExpressionType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>; StorageBase = Eigen::MatrixBase]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; SrcXprType = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Functor = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; SrcXprType = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/src/stan/services/sample/standalone_gqs.hpp:72:0:   required from ‘int stan::services::standalone_generate(const Model&, const Eigen::MatrixXd&, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::MatrixXd = Eigen::Matrix<double, -1, -1>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1253:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::standalone_gqs(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:30:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:883:25:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:332:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:850:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Func = add_assign_op<double, double>; typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:28:39:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:280:48:   required from ‘void Eigen::internal::outer_product_selector_run(Dst&, const Lhs&, const Rhs&, const Func&, const false_type&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; Func = generic_product_impl<Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::DenseShape, Eigen::DenseShape, 5>::set]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:317:41:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:883:25:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:332:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:850:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Func = add_assign_op<double, double>; typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/welford_covar_estimator.hpp:28:39:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
In file included from /mnt/library/RcppEigen/include/Eigen/Core:333:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘class Eigen::internal::gemv_traits<double, double, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:306:38:   required from ‘struct Eigen::internal::general_matrix_vector_product<long int, double, Eigen::internal::const_blas_data_mapper<double, long int, 1>, 1, false, double, Eigen::internal::const_blas_data_mapper<double, long int, 0>, false, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:347:132:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 1, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Dest = Eigen::Matrix<double, -1, 1>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   51 |         Vectorizable = unpacket_traits<_LhsPacket>::vectorizable &&
      |                                                     ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   52 |         unpacket_traits<_RhsPacket>::vectorizable &&
      |                                      ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   53 |         int(unpacket_traits<_LhsPacket>::size)==int(unpacket_traits<_RhsPacket>::size),
      |                                          ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   53 |         int(unpacket_traits<_LhsPacket>::size)==int(unpacket_traits<_RhsPacket>::size),
      |                                                                                  ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   54 |         LhsPacketSize = Vectorizable ? unpacket_traits<_LhsPacket>::size : 1,
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   55 |         RhsPacketSize = Vectorizable ? unpacket_traits<_RhsPacket>::size : 1,
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |         ResPacketSize = Vectorizable ? unpacket_traits<_ResPacket>::size : 1
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   59 |   typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   60 |   typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   61 |   typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘class Eigen::internal::gemv_traits<double, double, 1>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:310:42:   required from ‘struct Eigen::internal::general_matrix_vector_product<long int, double, Eigen::internal::const_blas_data_mapper<double, long int, 1>, 1, false, double, Eigen::internal::const_blas_data_mapper<double, long int, 0>, false, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:347:132:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 1, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Dest = Eigen::Matrix<double, -1, 1>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   51 |         Vectorizable = unpacket_traits<_LhsPacket>::vectorizable &&
      |                                                     ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   52 |         unpacket_traits<_RhsPacket>::vectorizable &&
      |                                      ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   53 |         int(unpacket_traits<_LhsPacket>::size)==int(unpacket_traits<_RhsPacket>::size),
      |                                          ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   53 |         int(unpacket_traits<_LhsPacket>::size)==int(unpacket_traits<_RhsPacket>::size),
      |                                                                                  ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   54 |         LhsPacketSize = Vectorizable ? unpacket_traits<_LhsPacket>::size : 1,
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   55 |         RhsPacketSize = Vectorizable ? unpacket_traits<_RhsPacket>::size : 1,
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |         ResPacketSize = Vectorizable ? unpacket_traits<_ResPacket>::size : 1
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   59 |   typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   60 |   typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   61 |   typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘class Eigen::internal::gemv_traits<double, double, 2>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:314:45:   required from ‘struct Eigen::internal::general_matrix_vector_product<long int, double, Eigen::internal::const_blas_data_mapper<double, long int, 1>, 1, false, double, Eigen::internal::const_blas_data_mapper<double, long int, 0>, false, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:347:132:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 1, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Dest = Eigen::Matrix<double, -1, 1>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:44:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   44 |   PACKET_DECL_COND_PREFIX(_, Lhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:45:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   45 |   PACKET_DECL_COND_PREFIX(_, Rhs, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:46:27: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   46 |   PACKET_DECL_COND_PREFIX(_, Res, _PacketSize);
      |                           ^
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:42:3: note: in definition of macro ‘PACKET_DECL_COND_PREFIX’
   42 |   prefix ## name ## Packet
      |   ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   51 |         Vectorizable = unpacket_traits<_LhsPacket>::vectorizable &&
      |                                                     ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:51:53: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   52 |         unpacket_traits<_RhsPacket>::vectorizable &&
      |                                      ^~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:52:38: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   53 |         int(unpacket_traits<_LhsPacket>::size)==int(unpacket_traits<_RhsPacket>::size),
      |                                          ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:42: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   53 |         int(unpacket_traits<_LhsPacket>::size)==int(unpacket_traits<_RhsPacket>::size),
      |                                                                                  ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:53:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   54 |         LhsPacketSize = Vectorizable ? unpacket_traits<_LhsPacket>::size : 1,
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:54:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   55 |         RhsPacketSize = Vectorizable ? unpacket_traits<_RhsPacket>::size : 1,
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:55:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |         ResPacketSize = Vectorizable ? unpacket_traits<_ResPacket>::size : 1
      |                                                                     ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:56:69: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   59 |   typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:59:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   60 |   typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:60:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
   61 |   typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;
      |                                                                         ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixVector.h:61:73: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/core/operator_addition.hpp:113:37:   required from ‘auto stan::math::add(const VarMat1&, const VarMat2&) [with VarMat1 = Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<var_value<double>, -1, 1> >; VarMat2 = Eigen::Matrix<var_value<double>, -1, 1>; stan::require_all_rev_matrix_t<VarMat1, VarMat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:576:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/rev/core/operator_addition.hpp:113:47:   required from ‘auto stan::math::add(const VarMat1&, const VarMat2&) [with VarMat1 = Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<var_value<double>, -1, 1> >; VarMat2 = Eigen::Matrix<var_value<double>, -1, 1>; stan::require_all_rev_matrix_t<VarMat1, VarMat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:576:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Matrix<stan::math::var_value<double>, -1, 1> >::val_Op, const Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_base_pointer_convertible.hpp:29:17:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/functor/map_rect_reduce.hpp:68:0:   required from ‘stan::math::matrix_d stan::math::internal::map_rect_reduce<F, double, stan::math::var_value<double> >::operator()(const stan::math::vector_d&, const stan::math::vector_d&, const std::vector<double>&, const std::vector<int>&, std::ostream*) const [with F = model_negBinomial_MPI_namespace::lp_reduce_functor__; stan::math::matrix_d = Eigen::Matrix<double, -1, -1>; stan::math::vector_d = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/stan/math/rev/functor/map_rect_concurrent.hpp:41:0:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::internal::map_rect_concurrent(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&; T_job_param = stan::math::var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >, const Eigen::CwiseUnaryView<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/StanHeaders/include/stan/math/rev/core/operator_addition.hpp:117:39:   required from ‘auto stan::math::add(const VarMat1&, const VarMat2&) [with VarMat1 = Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<var_value<double>, -1, 1> >; VarMat2 = Eigen::Matrix<var_value<double>, -1, 1>; stan::require_all_rev_matrix_t<VarMat1, VarMat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:576:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/rev/core/operator_addition.hpp:113:37:   required from ‘auto stan::math::add(const VarMat1&, const VarMat2&) [with VarMat1 = Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<var_value<double>, -1, 1> >, Eigen::Matrix<var_value<double, void>, -1, 1, 0, -1, 1> >; VarMat2 = Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<var_value<double>, -1, 1> >; stan::require_all_rev_matrix_t<VarMat1, VarMat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:601:0:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >::val_Op, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > >::val_Op, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<stan::math::var_value<double>, -1, 1>&>(Eigen::Matrix<stan::math::var_value<double>, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<stan::math::var_value<double>, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/meta/is_base_pointer_convertible.hpp:29:17:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/functor/map_rect_reduce.hpp:68:0:   required from ‘stan::math::matrix_d stan::math::internal::map_rect_reduce<F, double, stan::math::var_value<double> >::operator()(const stan::math::vector_d&, const stan::math::vector_d&, const std::vector<double>&, const std::vector<int>&, std::ostream*) const [with F = model_negBinomial_MPI_namespace::lp_reduce_functor__; stan::math::matrix_d = Eigen::Matrix<double, -1, -1>; stan::math::vector_d = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/stan/math/rev/functor/map_rect_concurrent.hpp:41:0:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::internal::map_rect_concurrent(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&; T_job_param = stan::math::var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:26:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>; SrcXprType = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>; SrcXprType = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>; Src = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>; Src = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, -1, false>; Src = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Assign.h:66:28:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/CommaInitializer.h:159:10:   required from ‘Eigen::CommaInitializer<Derived> Eigen::DenseBase<Derived>::operator<<(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_row.hpp:102:10:   required from ‘Eigen::Matrix<typename stan::return_type<T1, T2>::type, -1, 1> stan::math::append_row(const ColVec&, const Scal&) [with ColVec = Eigen::Map<const Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Scal = double; stan::require_t<stan::is_eigen_col_vector<T> >* <anonymous> = 0; stan::require_stan_scalar_t<V>* <anonymous> = 0; typename stan::return_type<T1, T2>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:29:31:   required from ‘T_return stan::math::internal::hypergeometric_3F2_infsum(const Ta&, const Tb&, const Tz&, double, int) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; T_return = double; ArrayAT = Eigen::Array<double, 3, 1>; ArrayBT = Eigen::Array<double, 3, 1>; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:123:47:   required from ‘auto stan::math::hypergeometric_3F2(const Ta&, const Tb&, const Tz&) [with Ta = std::vector<double>; Tb = std::vector<double>; Tz = double; stan::require_all_vector_t<T_y, T_high>* <anonymous> = 0; stan::require_stan_scalar_t<T2>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/hypergeometric_3F2.hpp:148:28:   required from ‘auto stan::math::hypergeometric_3F2(const std::initializer_list<_Tp>&, const std::initializer_list<_Value>&, const Tz&) [with Ta = double; Tb = double; Tz = double; stan::require_all_stan_scalar_t<Ta, Tb, Tz>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/inv_inc_beta.hpp:77:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:564:45:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:363:59:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:221:28:   required from ‘static typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::internal::lpNorm_selector<Derived, 1>::run(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:269:52:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::lpNorm() const [with int p = 1; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:514:74:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:54:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Rhs = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:359:56:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, 1, -1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, 1>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/model/indexing/rvalue.hpp:158:0:   required from ‘stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)> [with auto:767 = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>; Args = {Eigen::Matrix<double, -1, 1, 0, -1, 1>&}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/rvalue.hpp:156:0:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/add.hpp:45:13:   required from ‘auto stan::math::add(const Mat1&, const Mat2&) [with Mat1 = Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >; Mat2 = Eigen::Matrix<double, -1, 1>; stan::require_all_eigen_t<T_desired, T_actual>* <anonymous> = 0; stan::require_all_not_st_var<Mat1, Mat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:576:0:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/model/indexing/rvalue.hpp:158:0:   required from ‘stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)> [with auto:767 = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:370:41:   required by substitution of ‘template<class F, class ... Args, stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> > auto stan::math::make_holder(const F&, Args&& ...) [with F = stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>; Args = {Eigen::Matrix<double, -1, 1, 0, -1, 1>}; stan::require_plain_type_t<decltype (declval<F>()((declval<Args&>)()...))>* <anonymous> = <missing>]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/rvalue.hpp:156:0:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:115:7:   required from ‘class stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:312:16:   required from ‘auto stan::math::internal::make_holder_impl_construct_object(T&&, std::index_sequence<Is ...>, const std::tuple<Args* ...>&) [with T = Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >; long unsigned int ...Is = {0}; Args = {Eigen::Matrix<double, -1, 1, 0, -1, 1>}; std::index_sequence<Is ...> = std::integer_sequence<long unsigned int, 0>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:330:43:   required from ‘auto stan::math::internal::make_holder_impl(const F&, std::index_sequence<Is ...>, Args&& ...) [with F = stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>; long unsigned int ...Is = {0}; Args = {Eigen::Matrix<double, -1, 1, 0, -1, 1>}; std::index_sequence<Is ...> = std::integer_sequence<long unsigned int, 0>]’
/mnt/library/StanHeaders/include/stan/math/prim/meta/holder.hpp:353:36:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const stan::math::Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/add.hpp:45:13:   required from ‘auto stan::math::add(const Mat1&, const Mat2&) [with Mat1 = Holder<Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> > >(Eigen::CwiseNullaryOp<rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >&&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >; Mat2 = Eigen::CwiseNullaryOp<stan::model::rvalue<Eigen::Matrix<double, -1, 1>&>(Eigen::Matrix<double, -1, 1>&, const char*, const index_multi&)::<lambda(auto:767&)>::<lambda(Eigen::Index)>, Eigen::Matrix<double, -1, 1> >; stan::require_all_eigen_t<T_desired, T_actual>* <anonymous> = 0; stan::require_all_not_st_var<Mat1, Mat2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:601:0:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:37:51:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:199:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:370:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:479:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:113:15:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:486:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::Array<double, -1, 1>; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::Array<double, -1, 1>; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::Array<double, -1, 1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::Array<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::Array<double, -1, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/sum.hpp:47:15:   required from ‘stan::value_type_t<T> stan::math::sum(const T&) [with T = Eigen::Array<double, -1, 1>; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; stan::value_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:74:31:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::Array<double, -1, 1> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/sum.hpp:47:15:   required from ‘stan::value_type_t<T> stan::math::sum(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::Array<double, -1, 1> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; stan::value_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:82:16:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = var_value<double>; T_scale = var_value<double>; T_shape = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = var_value<double>]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/sum.hpp:47:15:   required from ‘stan::value_type_t<T> stan::math::sum(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; stan::value_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:87:14:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/prob/double_exponential_lpdf.hpp:95:33:   required from ‘stan::return_type_t<T, L, U> stan::math::double_exponential_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, 1, -1>; T_loc = int; T_scale = int; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1230:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/sum.hpp:47:15:   required from ‘stan::value_type_t<T> stan::math::sum(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; stan::value_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:82:38:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = int; T_scale = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1236:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>; SrcXprType = Eigen::Matrix<double, 1, -1>; Functor = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>; SrcXprType = Eigen::Matrix<double, 1, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>; Src = Eigen::Matrix<double, 1, -1>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 1, -1>, 1, -1, false>; Src = Eigen::Matrix<double, 1, -1>; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:49:26:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, 1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:681:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Src = Eigen::Matrix<double, -1, -1>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Src = Eigen::Matrix<double, -1, -1>; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/append_col.hpp:49:26:   required from ‘auto stan::math::append_col(const T1&, const T2&) [with T1 = Eigen::Matrix<double, -1, -1>; T2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; <template-parameter-1-3> = void]’
stanExports_negBinomial_MPI.h:684:0:   required from ‘Eigen::Matrix<typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type, -1, -1> model_negBinomial_MPI_namespace::merge_coefficients(const T0__&, const T1__&, const T2__&, const int&, const int&, const int&, std::ostream*) [with T0__ = Eigen::Matrix<double, 1, -1>; T1__ = Eigen::Matrix<double, 1, -1>; T2__ = Eigen::Matrix<double, -1, -1>; stan::require_all_t<stan::is_row_vector<Row>, stan::is_vt_not_complex<T4__>, stan::is_row_vector<Vec>, stan::is_vt_not_complex<T0__>, stan::is_eigen_matrix_dynamic<T2__>, stan::is_vt_not_complex<T6__> >* <anonymous> = 0; typename boost::math::tools::promote_args<typename stan::base_type<T, void>::type, typename stan::base_type<T0__, void>::type, typename stan::base_type<T6__, void>::type>::type = double; typename stan::base_type<T>::type = double; typename stan::base_type<T0__, void>::type = double; typename stan::base_type<T6__, void>::type = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1365:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>; U = Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:166:45:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:369:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:37:51:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; U = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; bool NeedToTranspose = false; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:372:86:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:469:72:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:469:55:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::eval_dynamic_impl(Dst&, const LhsT&, const RhsT&, const Func&, const Scalar&, Eigen::internal::true_type) [with Dst = Eigen::Matrix<double, -1, -1>; LhsT = Eigen::Matrix<double, -1, -1>; RhsT = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>; Scalar = double; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:446:22:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:43:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/sum.hpp:47:15:   required from ‘stan::value_type_t<T> stan::math::sum(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; stan::value_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/functor/broadcast_array.hpp:32:16:   required from ‘void stan::math::internal::broadcast_array<T>::operator=(const Y&) [with Y = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; T = double]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/normal_lpdf.hpp:99:33:   required from ‘stan::return_type_t<T, L, U> stan::math::normal_lpdf(const T_y&, const T_loc&, const T_scale&) [with bool propto = true; T_y = Eigen::Matrix<var_value<double>, -1, 1>; T_loc = Eigen::Matrix<var_value<double>, 1, -1>; T_scale = var_value<double>; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_y, T_scale_succ, T_scale_fail>* <anonymous> = 0; stan::return_type_t<T, L, U> = var_value<double>]’
stanExports_negBinomial_MPI.h:1240:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseUnaryOp<scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:98:46:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:78:71:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:363:59:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:369:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:375:18:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:296:40:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Rhs = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, false>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:26:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   required from ‘static void Eigen::internal::gemv_dense_selector<1, StorageOrder, BlasCompatible>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; int StorageOrder = 1; bool BlasCompatible = true; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/mnt/library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /mnt/library/BH/include/boost/concept_check.hpp:31:
/mnt/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/mnt/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/mnt/library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/mnt/library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/mnt/library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/mnt/library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/mnt/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/mnt/library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/mnt/library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >)>’
/mnt/library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/mnt/library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >)>’
/mnt/library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/mnt/library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’:
/mnt/library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/mnt/library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
/mnt/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/mnt/library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const iterator_range<IteratorT>&, const iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC1 = forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC2 = forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/mnt/library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:74:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:74:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 1; bool LhsIsTriangular = false; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:783:113:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Assign.h:66:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:363:59:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:337:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h: In instantiation of ‘static void Eigen::internal::selfadjoint_matrix_vector_product<Scalar, Index, StorageOrder, UpLo, ConjugateLhs, ConjugateRhs, Version>::run(Index, const Scalar*, Index, const Scalar*, Scalar*, Scalar) [with Scalar = double; Index = long int; int StorageOrder = 0; int UpLo = 1; bool ConjugateLhs = false; bool ConjugateRhs = false; int Version = 0]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:229:7:   required from ‘static void Eigen::internal::selfadjoint_product_impl<Lhs, LhsMode, false, Rhs, 0, true>::run(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; int LhsMode = 17; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:805:109:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::SelfAdjointShape, Eigen::DenseShape, ProductTag>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; int ProductTag = 7; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::internal::generic_product_impl<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::SelfAdjointShape, Eigen::DenseShape, 7>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::internal::generic_product_impl<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::SelfAdjointShape, Eigen::DenseShape, 7>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:369:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:62:121: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   62 |   conj_helper<Packet,Packet,NumTraits<Scalar>::IsComplex && EIGEN_LOGICAL_XOR(ConjugateLhs,  IsRowMajor), ConjugateRhs> pcj0;
      |                                                                                                                         ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:62:121: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:63:121: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   63 |   conj_helper<Packet,Packet,NumTraits<Scalar>::IsComplex && EIGEN_LOGICAL_XOR(ConjugateLhs, !IsRowMajor), ConjugateRhs> pcj1;
      |                                                                                                                         ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:63:121: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, -1>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; U = Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Func = assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Assign.h:66:28:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
stanExports_negBinomial_MPI.h:1248:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; VecR = std::vector<double>; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = false; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/newton.hpp:56:0:   required from ‘int stan::services::optimize::newton(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, bool, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:502:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/BlasUtil.h:506:13:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘struct Eigen::internal::gemm_pack_rhs<double, long int, Eigen::internal::const_blas_data_mapper<double, long int, 1>, 4, 1, false, false>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:81:75:   required from ‘static void Eigen::internal::general_matrix_matrix_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride>::run(Index, Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, ResScalar, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&, Eigen::internal::GemmParallelInfo<Index>*) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 0; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 1; bool ConjugateRhs = false; int ResInnerStride = 1; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:230:14:   required from ‘void Eigen::internal::gemm_functor<Scalar, Index, Gemm, Lhs, Rhs, Dest, BlockingType>::operator()(Index, Index, Index, Index, Eigen::internal::GemmParallelInfo<Index>*) const [with Scalar = double; Index = long int; Gemm = Eigen::internal::general_matrix_matrix_product<long int, double, 0, false, double, 1, false, 0, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Dest = Eigen::Matrix<double, -1, -1>; BlockingType = Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/Parallelizer.h:114:7:   required from ‘void Eigen::internal::parallelize_gemm(const Functor&, Index, Index, Index, bool) [with bool Condition = true; Functor = gemm_functor<double, long int, general_matrix_matrix_product<long int, double, 0, false, double, 1, false, 0, 1>, Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >; Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:509:9:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2504:50: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2504 |   typedef typename unpacket_traits<Packet>::half HalfPacket;
      |                                                  ^~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2505:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2505 |   typedef typename unpacket_traits<typename unpacket_traits<Packet>::half>::half QuarterPacket;
      |                                                                                  ^~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2505:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2508:56: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2508 |          HalfPacketSize = unpacket_traits<HalfPacket>::size,
      |                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2508:56: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2509:70: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2509 |                  QuarterPacketSize = unpacket_traits<QuarterPacket>::size};
      |                                                                      ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2509:70: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2509:70: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:332:45:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:332:58:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:332:45:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:370:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:479:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:113:15:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:486:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:114:15:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:370:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:479:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:486:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Matrix<double, -1, -1>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>; Functor = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/functor/map_rect.hpp:184:52:   required from ‘Eigen::Matrix<typename stan::return_type<T_shared_param, T_job_param>::type, -1, 1> stan::math::map_rect(const T_shared_param&, const std::vector<Eigen::Matrix<T_job_param, -1, 1> >&, const std::vector<std::vector<double> >&, const std::vector<std::vector<int> >&, std::ostream*) [with int call_id = 1; F = model_negBinomial_MPI_namespace::lp_reduce_functor__; T_shared_param = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; T_job_param = var_value<double>; stan::require_eigen_col_vector_t<T_rho>* <anonymous> = 0; typename stan::return_type<T_shared_param, T_job_param>::type = var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1246:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/mnt/library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/mnt/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/mnt/library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/mnt/library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/mnt/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/mnt/library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/mnt/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/mnt/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’
/mnt/library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/mnt/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/mnt/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/13/bits/stl_vector.h:1671:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/13/bits/stl_vector.h:711:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/mnt/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = detail::token_finderF<detail::is_any_ofF<char> >]’
/mnt/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = detail::is_any_ofF<char>]’
/mnt/library/StanHeaders/include/src/stan/io/stan_csv_reader.hpp:19:17:   required from here
/mnt/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/mnt/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/mnt/library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:303:32:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
In file included from /mnt/library/RcppEigen/include/Eigen/Core:166:
/mnt/library/RcppEigen/include/Eigen/src/Core/util/Memory.h: In instantiation of ‘Index Eigen::internal::first_default_aligned(const Scalar*, Index) [with Scalar = double; Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:89:68:   required from ‘static void Eigen::internal::selfadjoint_matrix_vector_product<Scalar, Index, StorageOrder, UpLo, ConjugateLhs, ConjugateRhs, Version>::run(Index, const Scalar*, Index, const Scalar*, Scalar*, Scalar) [with Scalar = double; Index = long int; int StorageOrder = 0; int UpLo = 1; bool ConjugateLhs = false; bool ConjugateRhs = false; int Version = 0]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/SelfadjointMatrixVector.h:229:7:   required from ‘static void Eigen::internal::selfadjoint_product_impl<Lhs, LhsMode, false, Rhs, 0, true>::run(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; int LhsMode = 17; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:805:109:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::SelfAdjointShape, Eigen::DenseShape, ProductTag>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; int ProductTag = 7; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::internal::generic_product_impl<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::SelfAdjointShape, Eigen::DenseShape, 7>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Lhs = Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::internal::generic_product_impl<Eigen::SelfAdjointView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::SelfAdjointShape, Eigen::DenseShape, 7>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:369:35:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, CoeffVectorType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:449:31:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/Memory.h:500:60: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  500 |   return first_aligned<unpacket_traits<DefaultPacketType>::alignment>(array, size);
      |                                                            ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:167:27:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:169:25:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/HouseholderSequence.h:304:43:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:170:53:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0, 5>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:170:34:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:129:41:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:131:25:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/HouseholderSequence.h:307:42:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:132:29:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/HouseholderSequence.h:307:42:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0, 5>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:132:41:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:63:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>; Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 1, -1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:62:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:22:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:332:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:850:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>; typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:779:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; U = Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:332:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:850:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; Func = assign_op<double, double>; typename enable_if<evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:836:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:779:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘void Eigen::internal::gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, Packet, 0, Conjugate, PanelMode>::operator()(Scalar*, const DataMapper&, Index, Index, Index, Index) [with Scalar = double; Index = long int; DataMapper = Eigen::internal::const_blas_data_mapper<double, long int, 0>; int Pack1 = 4; int Pack2 = 2; Packet = __vector(2) double; bool Conjugate = false; bool PanelMode = false]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:184:17:   required from ‘static void Eigen::internal::general_matrix_matrix_product<Index, LhsScalar, LhsStorageOrder, ConjugateLhs, RhsScalar, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride>::run(Index, Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, Index, ResScalar, Eigen::internal::level3_blocking<LhsScalar, RhsScalar>&, Eigen::internal::GemmParallelInfo<Index>*) [with Index = long int; LhsScalar = double; int LhsStorageOrder = 0; bool ConjugateLhs = false; RhsScalar = double; int RhsStorageOrder = 1; bool ConjugateRhs = false; int ResInnerStride = 1; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:230:14:   required from ‘void Eigen::internal::gemm_functor<Scalar, Index, Gemm, Lhs, Rhs, Dest, BlockingType>::operator()(Index, Index, Index, Index, Eigen::internal::GemmParallelInfo<Index>*) const [with Scalar = double; Index = long int; Gemm = Eigen::internal::general_matrix_matrix_product<long int, double, 0, false, double, 1, false, 0, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Dest = Eigen::Matrix<double, -1, -1>; BlockingType = Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/Parallelizer.h:114:7:   required from ‘void Eigen::internal::parallelize_gemm(const Functor&, Index, Index, Index, bool) [with bool Condition = true; Functor = gemm_functor<double, long int, general_matrix_matrix_product<long int, double, 0, false, double, 1, false, 0, 1>, Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >; Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:509:9:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2100:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2100 |   typedef typename unpacket_traits<typename unpacket_traits<Packet>::half>::half QuarterPacket;
      |                                                                                  ^~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2102:56: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2102 |          HalfPacketSize = unpacket_traits<HalfPacket>::size,
      |                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2103:62: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2103 |          QuarterPacketSize = unpacket_traits<QuarterPacket>::size,
      |                                                              ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2103:62: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:98:40:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:328:36:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:98:40:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:328:36:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:70:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Matrix<double, -1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:63:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>; U = Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>, -1, 1, true>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:62:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:63:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true>; Derived = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:62:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘void Eigen::internal::gemm_pack_rhs<Scalar, Index, DataMapper, nr, 0, Conjugate, PanelMode>::operator()(Scalar*, const DataMapper&, Index, Index, Index, Index) [with Scalar = double; Index = long int; DataMapper = Eigen::internal::const_blas_data_mapper<double, long int, 0>; int nr = 4; bool Conjugate = false; bool PanelMode = true]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:346:25:   required from ‘static void Eigen::internal::product_triangular_matrix_matrix<Scalar, Index, Mode, false, LhsStorageOrder, ConjugateLhs, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, Version>::run(Index, Index, Index, const Scalar*, Index, const Scalar*, Index, Scalar*, Index, Index, const Scalar&, Eigen::internal::level3_blocking<Scalar, Scalar>&) [with Scalar = double; Index = long int; int Mode = 1; int LhsStorageOrder = 1; bool ConjugateLhs = false; int RhsStorageOrder = 0; bool ConjugateRhs = false; int ResInnerStride = 1; int Version = 0]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:443:12:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 1; bool LhsIsTriangular = false; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:783:113:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::TriangularShape, ProductTag>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; int ProductTag = 8; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::DenseShape, Eigen::TriangularShape, 8>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::DenseShape, Eigen::TriangularShape, 8>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2459:62: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2459 |           PacketBlock<Packet,(PacketSize%4)==0?4:PacketSize> kernel;
      |                                                              ^~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 6>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 6>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 6>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 6>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 6>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 6>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:99:96:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 2>, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 2>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 2>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 2>, Eigen::Matrix<double, -1, -1>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 2>, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 2>, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:101:66:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>, Eigen::Matrix<double, -1, -1>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1>, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:102:66:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::TriangularView<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 5>, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::TriangularView<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 5>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::TriangularView<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 5>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::TriangularView<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 5>, Eigen::Matrix<double, -1, -1>, 0, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::TriangularView<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 5>, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::TriangularView<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 5>, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:103:22:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:361:25:   required from ‘static bool Eigen::internal::ldlt_inplace<1>::unblocked(MatrixType&, TranspositionType&, Workspace&, Eigen::internal::SignMatrix&) [with MatrixType = Eigen::Matrix<double, -1, -1>; TranspositionType = Eigen::Transpositions<-1, -1, int>; Workspace = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:526:51:   required from ‘Eigen::LDLT<_MatrixType, _UpLo>& Eigen::LDLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:120:14:   required from ‘Eigen::LDLT<MatrixType, UpLo>::LDLT(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>; int _UpLo = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LDLT.h:683:10:   required from ‘const Eigen::LDLT<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::ldlt() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/err/check_pos_definite.hpp:45:67:   required from ‘void stan::math::check_pos_definite(const char*, const char*, const EigMat&) [with EigMat = Eigen::Matrix<double, -1, -1>; stan::require_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/services/util/validate_dense_inv_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘struct Eigen::internal::gemm_pack_rhs<double, long int, Eigen::internal::const_blas_data_mapper<double, long int, 1>, 4, 1, false, true>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularSolverMatrix.h:233:85:   required from ‘static void Eigen::internal::triangular_solve_matrix<Scalar, Index, 2, Mode, Conjugate, TriStorageOrder, 0, OtherInnerStride>::run(Index, Index, const Scalar*, Index, Scalar*, Index, Index, Eigen::internal::level3_blocking<Scalar, Scalar>&) [with Scalar = double; Index = long int; int Mode = 2; bool Conjugate = false; int TriStorageOrder = 1; int OtherInnerStride = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolveTriangular.h:102:12:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, Side, Mode, 0, -1>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >; Rhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; int Side = 2; int Mode = 2]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolveTriangular.h:182:21:   required from ‘void Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::solveInPlace(const Eigen::MatrixBase<OtherDerived>&) const [with int Side = 2; OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; _MatrixType = const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >; unsigned int _Mode = 2]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:364:96:   required from ‘static Eigen::Index Eigen::internal::llt_inplace<Scalar, 1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; Scalar = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:408:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:456:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2504:50: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2504 |   typedef typename unpacket_traits<Packet>::half HalfPacket;
      |                                                  ^~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2505:82: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2505 |   typedef typename unpacket_traits<typename unpacket_traits<Packet>::half>::half QuarterPacket;
      |                                                                                  ^~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2505:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2508:56: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2508 |          HalfPacketSize = unpacket_traits<HalfPacket>::size,
      |                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2508:56: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2509:70: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 2509 |                  QuarterPacketSize = unpacket_traits<QuarterPacket>::size};
      |                                                                      ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2509:70: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2509:70: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:366:43:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, false>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:26:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   required from ‘static void Eigen::internal::gemv_dense_selector<1, StorageOrder, BlasCompatible>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; int StorageOrder = 1; bool BlasCompatible = true; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:26:   required from ‘static void Eigen::internal::gemv_dense_selector<1, StorageOrder, BlasCompatible>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; int StorageOrder = 0; bool BlasCompatible = false; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 1; bool LhsIsTriangular = true; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:74:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 1; bool LhsIsTriangular = true; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:347:30:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:548:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 4, 4>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:303:42:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:63:90:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:63:57:   required from ‘void Eigen::internal::make_block_householder_triangular_factor(TriangularFactorType&, const VectorsType&, const CoeffsType&) [with TriangularFactorType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:92:55:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:64:57:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:73:50:   required from ‘void Eigen::internal::make_block_householder_triangular_factor(TriangularFactorType&, const VectorsType&, const CoeffsType&) [with TriangularFactorType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:92:55:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:113:15:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:486:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Lhs = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Lhs = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:564:45:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:178:42:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/NoAlias.h:59:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, 0>; ExpressionType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; StorageBase = Eigen::MatrixBase]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:332:38:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In instantiation of ‘void Eigen::internal::gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, Packet, 0, Conjugate, PanelMode>::operator()(Scalar*, const DataMapper&, Index, Index, Index, Index) [with Scalar = double; Index = long int; DataMapper = Eigen::internal::blas_data_mapper<double, long int, 0, 0, 1>; int Pack1 = 4; int Pack2 = 2; Packet = __vector(2) double; bool Conjugate = false; bool PanelMode = true]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularSolverMatrix.h:319:27:   required from ‘static void Eigen::internal::triangular_solve_matrix<Scalar, Index, 2, Mode, Conjugate, TriStorageOrder, 0, OtherInnerStride>::run(Index, Index, const Scalar*, Index, Scalar*, Index, Index, Eigen::internal::level3_blocking<Scalar, Scalar>&) [with Scalar = double; Index = long int; int Mode = 2; bool Conjugate = false; int TriStorageOrder = 1; int OtherInnerStride = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolveTriangular.h:102:12:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, Side, Mode, 0, -1>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >; Rhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; int Side = 2; int Mode = 2]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolveTriangular.h:182:21:   required from ‘void Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::solveInPlace(const Eigen::MatrixBase<OtherDerived>&) const [with int Side = 2; OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; _MatrixType = const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >; unsigned int _Mode = 2]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:364:96:   required from ‘static Eigen::Index Eigen::internal::llt_inplace<Scalar, 1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>; Scalar = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:408:68:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:456:42:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2100:82: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2100 |   typedef typename unpacket_traits<typename unpacket_traits<Packet>::half>::half QuarterPacket;
      |                                                                                  ^~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2102:56: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2102 |          HalfPacketSize = unpacket_traits<HalfPacket>::size,
      |                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2103:62: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
 2103 |          QuarterPacketSize = unpacket_traits<QuarterPacket>::size,
      |                                                              ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h:2103:62: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:370:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:479:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:486:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/BlasUtil.h:506:13:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>; U = Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>; U = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:379:43:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:379:80:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:379:59:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 1, false>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >; Rhs = Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >; Dest = Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:12:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>; U = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:114:15:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:370:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:479:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:113:15:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:369:45:   required from ‘struct Eigen::internal::generic_product_impl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:486:24:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:445:20:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/model/indexing/access_helpers.hpp:92:0:   required from ‘void stan::model::internal::assign_impl(T1&&, T2&&, const char*) [with T1 = Eigen::Matrix<double, -1, -1>&; T2 = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_all_eigen_t<T_desired, T_actual>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/assign.hpp:60:0:   required from ‘void stan::model::assign(T&&, U&&, const char*) [with T = Eigen::Matrix<double, -1, -1>&; U = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<std::is_assignable<typename std::decay<_Tp>::type&, typename std::decay<_Tp2>::type> >* <anonymous> = 0; stan::require_all_not_t<internal::is_tuple<Tuple1>, internal::is_tuple<Tuple2> >* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1368:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/model/indexing/access_helpers.hpp:92:0:   required from ‘void stan::model::internal::assign_impl(T1&&, T2&&, const char*) [with T1 = Eigen::Matrix<double, -1, -1>&; T2 = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_all_eigen_t<T_desired, T_actual>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/assign.hpp:60:0:   required from ‘void stan::model::assign(T&&, U&&, const char*) [with T = Eigen::Matrix<double, -1, -1>&; U = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<std::is_assignable<typename std::decay<_Tp>::type&, typename std::decay<_Tp2>::type> >* <anonymous> = 0; stan::require_all_not_t<internal::is_tuple<Tuple1>, internal::is_tuple<Tuple2> >* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1368:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 2; bool LhsIsTriangular = false; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:783:113:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:74:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, -1>, -1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 2; bool LhsIsTriangular = false; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:783:113:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 64>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:22:57:   required from ‘struct Eigen::internal::traits<Eigen::Matrix<double, 8, 8, 0, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<double, 8, 8, 0, 8, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:150:68:   required from ‘static void Eigen::internal::product_triangular_matrix_matrix<Scalar, Index, Mode, true, LhsStorageOrder, ConjugateLhs, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, Version>::run(Index, Index, Index, const Scalar*, Index, const Scalar*, Index, Scalar*, Index, Index, const Scalar&, Eigen::internal::level3_blocking<Scalar, Scalar>&) [with Scalar = double; Index = long int; int Mode = 1; int LhsStorageOrder = 0; bool ConjugateLhs = false; int RhsStorageOrder = 1; bool ConjugateRhs = false; int ResInnerStride = 1; int Version = 0]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:443:12:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 1; bool LhsIsTriangular = true; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:153:32:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h: In instantiation of ‘struct Eigen::internal::find_best_packet<double, 8>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:179:81:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:153:32:   required from ‘static void Eigen::internal::product_triangular_matrix_matrix<Scalar, Index, Mode, true, LhsStorageOrder, ConjugateLhs, RhsStorageOrder, ConjugateRhs, 0, ResInnerStride, Version>::run(Index, Index, Index, const Scalar*, Index, const Scalar*, Index, Scalar*, Index, Index, const Scalar&, Eigen::internal::level3_blocking<Scalar, Scalar>&) [with Scalar = double; Index = long int; int Mode = 1; int LhsStorageOrder = 0; bool ConjugateLhs = false; int RhsStorageOrder = 1; bool ConjugateRhs = false; int ResInnerStride = 1; int Version = 0]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:443:12:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 1; bool LhsIsTriangular = true; Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:44: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  190 |          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:190:83: warning: ignoring attributes on template argument ‘Eigen::internal::unpacket_traits<__vector(2) double>::half’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:208:88: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  208 |   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
      |                                                                                        ^~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/util/XprHelper.h:372:102:   required from ‘struct Eigen::internal::plain_object_eval<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:370:45:   required from ‘struct Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; int Options = 0; Scalar = double; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>; Func = assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/NoAlias.h:43:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, 0>; ExpressionType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:167:19:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:769:69:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:347:30:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:548:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/GeneralMatrixMatrix.h:444:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:43:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:70:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:43:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/model/indexing/access_helpers.hpp:92:0:   required from ‘void stan::model::internal::assign_impl(T1&&, T2&&, const char*) [with T1 = Eigen::Matrix<double, -1, -1>&; T2 = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_all_eigen_t<T_desired, T_actual>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/assign.hpp:60:0:   required from ‘void stan::model::assign(T&&, U&&, const char*) [with T = Eigen::Matrix<double, -1, -1>&; U = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<std::is_assignable<typename std::decay<_Tp>::type&, typename std::decay<_Tp2>::type> >* <anonymous> = 0; stan::require_all_not_t<internal::is_tuple<Tuple1>, internal::is_tuple<Tuple2> >* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1368:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 4, 4, 1, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 4, 4, 1, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4, 1, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 0>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 0>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, 4, 4, 1, 4, 4>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:303:32:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:75:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   required from ‘void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 1> >; Functor = Eigen::internal::assign_op<double, double>; int Version = 1; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:668:16:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1, 1, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:29:18:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:31:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, -1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/TriangularMatrix.h:856:103:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::TriangularShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/EigenBase.h:145:18:   required from ‘Derived& Eigen::DenseBase<Derived>::operator+=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, 0>, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:31:19:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:142:7:   required from ‘Eigen::DenseCoeffsBase<Derived, 0>::CoeffReturnType Eigen::DenseCoeffsBase<Derived, 0>::coeff(Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false>; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:182:19:   required from ‘Eigen::DenseCoeffsBase<Derived, 0>::CoeffReturnType Eigen::DenseCoeffsBase<Derived, 0>::operator()(Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<double, -1, 1>, -1, 1, false>; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:63:53:   required from ‘void Eigen::internal::make_block_householder_triangular_factor(TriangularFactorType&, const VectorsType&, const CoeffsType&) [with TriangularFactorType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/BlockHouseholder.h:92:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/HouseholderSequence.h:399:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&, bool) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, -1, 1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/HouseholderSequence.h:320:29:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = div_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = div_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = div_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SelfCwiseBinaryOp.h:41:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Cholesky/LLT.h:333:21:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Map.h:94:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularSolverVector.h:39:18:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularSolverVector.h:78:57:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularSolverVector.h:78:72:   required from ‘static void Eigen::internal::triangular_solve_vector<LhsScalar, RhsScalar, Index, 1, Mode, Conjugate, 1>::run(Index, const LhsScalar*, Index, RhsScalar*) [with LhsScalar = double; RhsScalar = double; Index = long int; int Mode = 2; bool Conjugate = false]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolveTriangular.h:73:12:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:47:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:26:   required from ‘static void Eigen::internal::gemv_dense_selector<1, StorageOrder, BlasCompatible>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; int StorageOrder = 0; bool BlasCompatible = false; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:366:43:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, false>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   required from ‘static void Eigen::internal::gemv_dense_selector<1, StorageOrder, BlasCompatible>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; int StorageOrder = 0; bool BlasCompatible = true; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:347:30:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 8, 8, 0, 8, 8>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:548:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 8, 8, 0, 8, 8>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:151:29:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:347:30:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:548:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:153:42:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Functor = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
/mnt/library/RcppEigen/include/Eigen/src/Householder/Householder.h:168:9:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:37:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:37:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:379:43:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:379:80:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:379:59:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 1, false>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >; Rhs = Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >; Dest = Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:12:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/model/indexing/access_helpers.hpp:92:0:   required from ‘void stan::model::internal::assign_impl(T1&&, T2&&, const char*) [with T1 = Eigen::Matrix<double, -1, -1>&; T2 = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_all_eigen_t<T_desired, T_actual>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/assign.hpp:60:0:   required from ‘void stan::model::assign(T&&, U&&, const char*) [with T = Eigen::Matrix<double, -1, -1>&; U = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<std::is_assignable<typename std::decay<_Tp>::type&, typename std::decay<_Tp2>::type> >* <anonymous> = 0; stan::require_all_not_t<internal::is_tuple<Tuple1>, internal::is_tuple<Tuple2> >* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1368:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/model/indexing/access_helpers.hpp:92:0:   required from ‘void stan::model::internal::assign_impl(T1&&, T2&&, const char*) [with T1 = Eigen::Matrix<double, -1, -1>&; T2 = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_all_eigen_t<T_desired, T_actual>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/src/stan/model/indexing/assign.hpp:60:0:   required from ‘void stan::model::assign(T&&, U&&, const char*) [with T = Eigen::Matrix<double, -1, -1>&; U = Eigen::Product<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, -1>, 0>; stan::require_t<std::is_assignable<typename std::decay<_Tp>::type&, typename std::decay<_Tp2>::type> >* <anonymous> = 0; stan::require_all_not_t<internal::is_tuple<Tuple1>, internal::is_tuple<Tuple2> >* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1368:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array_impl(RNG&, VecR&, VecI&, VecVar&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; VecR = std::vector<double>; VecI = std::vector<int>; VecVar = std::vector<double>; stan::require_vector_like_vt<std::is_floating_point, VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::require_vector_vt<std::is_floating_point, VecVar>* <anonymous> = 0; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1838:0:   required from ‘void model_negBinomial_MPI_namespace::model_negBinomial_MPI::write_array(RNG&, std::vector<double>&, std::vector<int>&, std::vector<double>&, bool, bool, std::ostream*) const [with RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1105:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::constrain_pars(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:26:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4, 1, 4, 4> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4, 1, 4, 4> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4, 1, 4, 4> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4, 1, 4, 4> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:347:30:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 4, 1, 4, 4>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:548:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 4, 4, 1, 4, 4>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:301:29:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1043:41:   required from ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:63:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>; U = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>; Derived = Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:62:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:63:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Derived = Eigen::Block<const Eigen::Block<const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true>, 1, -1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:62:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:48:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 1, 0, 8, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 1, 0, 8, 1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 1, 0, 8, 1>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 8, 1, 0, 8, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 8, 1, 0, 8, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 1, 0, 8, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true>; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true>; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true>; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >, -1, -1, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:31:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, true> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:123:20:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>& stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::operator=(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/arena_matrix.hpp:68:11:   required from ‘stan::math::arena_matrix<MatrixType, typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type>::arena_matrix(const T&) [with T = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_eigen_t<T>* <anonymous> = 0; MatrixType = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::is_eigen_dense_base<typename std::decay<_Tp>::type>::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/vari.hpp:722:9:   required from ‘stan::math::vari_value<T, typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type>::vari_value(const S&, bool) [with S = Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<stan::math::conjunction<std::is_same<typename std::decay<_Tp>::type, typename stan::plain_type<T, void>::type>, stan::is_eigen_dense_base<T> >::value, void>::type = void; typename std::decay<_Tp>::type = Eigen::Matrix<double, -1, -1>; typename stan::plain_type<T>::type = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/var.hpp:366:26:   required from ‘stan::math::var_value<T, typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type>::var_value(S&&) [with S = const Eigen::Product<Eigen::TriangularView<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 0>; stan::require_assignable_t<T, S>* <anonymous> = 0; T = Eigen::Matrix<double, -1, -1>; typename std::enable_if<std::integral_constant<bool, ((stan::is_eigen<T>::value || stan::is_kernel_expression_and_not_scalar<T>::value) && std::is_floating_point<typename stan::value_type<T>::type>::value)>::value, void>::type = void; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply_lower_tri_self_transpose.hpp:27:21:   required from ‘auto stan::math::multiply_lower_tri_self_transpose(const T&) [with T = var_value<Eigen::Matrix<double, -1, -1> >; stan::require_rev_matrix_t<T>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/rev/fun/cov_matrix_constrain.hpp:59:43:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:26:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1043:41:   required from ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; Functor = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; Functor = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; U = Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false>; U = Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:43:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > > >, 1, -1, true>, const Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> > > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true>; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true>; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true>; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, -1, -1, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:31:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, true> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; Derived = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/to_ref.hpp:18:27:   required from ‘stan::ref_type_t<T&&> stan::math::to_ref(T&&) [with T = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >&; stan::ref_type_t<T&&> = Eigen::Matrix<double, -1, -1, 1, -1, -1>]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/tcrossprod.hpp:27:29:   required from ‘Eigen::Matrix<typename stan::value_type<T>::type, T::RowsAtCompileTime, T::RowsAtCompileTime> stan::math::tcrossprod(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0> >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; typename stan::value_type<T>::type = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/crossprod.hpp:21:20:   required from ‘auto stan::math::crossprod(const EigMat&) [with EigMat = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::TriangularView<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 2>, 0>; stan::require_eigen_t<T_desired>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/wishart_rng.hpp:34:19:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true>; U = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:74:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; int Mode = 5; bool LhsIsTriangular = true; Lhs = const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<double, -1, -1>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false> >, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularSolverVector.h:78:127:   required from ‘static void Eigen::internal::triangular_solve_vector<LhsScalar, RhsScalar, Index, 1, Mode, Conjugate, 1>::run(Index, const LhsScalar*, Index, RhsScalar*) [with LhsScalar = double; RhsScalar = double; Index = long int; int Mode = 2; bool Conjugate = false]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolveTriangular.h:73:12:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, Side, Mode, 0, 1>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, 1>; int Side = 1; int Mode = 2]’
/mnt/library/RcppEigen/include/Eigen/src/Core/SolveTriangular.h:182:21:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:38:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:57:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::val_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:68:23:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:194:32:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:194:48:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, false, Lhs, true, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; int Mode = 5; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Rhs = const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:783:113:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = add_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = add_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, 1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:296:25:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0, 7>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, Eigen::Matrix<double, -1, -1>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:345:45:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/services/util/run_adaptive_sampler.hpp:57:0:   required from ‘void stan::services::util::run_adaptive_sampler(Sampler&, Model&, std::vector<double>&, int, int, int, int, bool, RNG&, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, size_t, size_t) [with Sampler = stan::mcmc::adapt_dense_e_nuts<model_negBinomial_MPI_namespace::model_negBinomial_MPI, boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> > >; Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; size_t = long unsigned int]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:97:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/StanHeaders/include/src/stan/services/sample/hmc_nuts_dense_e_adapt.hpp:150:0:   required from ‘int stan::services::sample::hmc_nuts_dense_e_adapt(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, int, int, int, bool, int, double, double, int, double, double, double, double, unsigned int, unsigned int, unsigned int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:638:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:75:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   required from ‘void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::CwiseUnaryOp<Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Matrix<stan::math::var_value<double>, -1, -1>, 0, Eigen::Stride<0, 0> > >, 1> >; Functor = Eigen::internal::assign_op<double, double>; int Version = 1; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:668:16:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/rev/fun/multiply.hpp:44:27:   required from ‘auto stan::math::multiply(const T1&, const T2&) [with T1 = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; T2 = Eigen::Matrix<var_value<double>, -1, -1>; stan::require_all_matrix_t<EigMat1, EigMat2>* <anonymous> = 0; stan::require_return_type_t<stan::is_var, T1, T2>* <anonymous> = 0; stan::require_not_row_and_col_vector_t<T1, T2>* <anonymous> = 0]’
stanExports_negBinomial_MPI.h:1206:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; VecR = std::vector<stan::math::var_value<double>, std::allocator<stan::math::var_value<double> > >; VecI = std::vector<int>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1849:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(std::vector<T_l>&, std::vector<int>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = true; T_ = stan::math::var_value<double>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/log_prob_grad.hpp:40:0:   required from ‘double stan::model::log_prob_grad(const M&, std::vector<double>&, std::vector<int>&, std::vector<double>&, std::ostream*) [with bool propto = true; bool jacobian_adjust_transform = true; M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; std::ostream = std::basic_ostream<char>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1183:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::grad_log_prob(SEXP, SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:23:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:357:7:   required from ‘class Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:414:17:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/BlasUtil.h:506:13:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/VectorBlock.h:56:47:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:341:54:   required from ‘static void Eigen::internal::trmv_selector<Mode, 1>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >; Rhs = Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >; Dest = Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; int Mode = 6; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:194:18:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 6; bool LhsIsTriangular = true; Lhs = const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >; Rhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:74:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 6; bool LhsIsTriangular = true; Lhs = const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >; Rhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:120:7:   required from ‘class Eigen::internal::dense_product_base<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1, 8>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:152:7:   required from ‘class Eigen::ProductImpl<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:71:7:   required from ‘class Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:462:68:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 16, Eigen::Stride<0, 0> > >; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:305:153:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<> >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<> >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::InnerStride<> >, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 23 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:137:106:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:137:77:   required from ‘static void Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, const ResScalar&) [with Index = long int; int Mode = 6; LhsScalar = double; bool ConjLhs = false; RhsScalar = double; bool ConjRhs = false; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:332:12:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 1, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 8, 8, 1, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 1, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:178:7:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Diagonal.h:63:53:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:153:32:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true> >, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:63:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true>; U = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; Derived = Eigen::Block<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, 1, -1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:62:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>; U = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false>, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:347:30:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 8, 8, 1, 8, 8>; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseNullaryOp.h:548:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 8, 8, 1, 8, 8>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:151:29:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false>; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false>; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false>; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >, -1, -1, false>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:31:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 20 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true> >; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, true>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:32:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 25 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 2; bool LhsIsTriangular = true; Lhs = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Rhs = Eigen::Matrix<double, -1, -1>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true>, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:329:7:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   [ skipping 25 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:462:59:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, LhsIsTriangular, Lhs, false, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, -1, -1>; int Mode = 1; bool LhsIsTriangular = true; Lhs = const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >; Rhs = Eigen::Matrix<double, -1, -1>; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:770:14:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, 0, Eigen::OuterStride<> >, 1, -1, true>, 1, -1, false>, const Eigen::Transpose<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:137:114:   required from ‘static void Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, ResScalar*, Index, const ResScalar&) [with Index = long int; int Mode = 6; LhsScalar = double; bool ConjLhs = false; RhsScalar = double; bool ConjRhs = false; int Version = 0; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:332:12:   required from ‘static void Eigen::internal::trmv_selector<Mode, 1>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >; Rhs = Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >; Dest = Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; int Mode = 6; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:194:18:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1043:41:   required from ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   [ skipping 37 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 35 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:780:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>; Src = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, -1, 1, false> >; Derived = Eigen::Block<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, -1, 1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixVector.h:341:27:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>; Func = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:858:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>; Func = sub_assign_op<double, double>; typename enable_if<(! evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape]’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/products/TriangularMatrixMatrix.h:457:31:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, -1, -1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:606:52:   required from ‘const Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, -1>; int ProductTag = 8; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Matrix<double, -1, -1>; CoeffReturnType = double; Eigen::Index = long int]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:654:63:   [ skipping 23 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs_update.hpp:40:0:   required from ‘Scalar stan::optimization::BFGSUpdate_HInv<Scalar, DimAtCompile>::update(const VectorT&, const VectorT&, bool) [with Scalar = double; int DimAtCompile = -1; VectorT = Eigen::Matrix<double, -1, 1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/bfgs.hpp:246:0:   required from ‘int stan::optimization::BFGSMinimizer<FunctorType, QNUpdateType, Scalar, DimAtCompile>::step() [with FunctorType = stan::optimization::ModelAdaptor<model_negBinomial_MPI_namespace::model_negBinomial_MPI, false>; QNUpdateType = stan::optimization::BFGSUpdate_HInv<>; Scalar = double; int DimAtCompile = -1]’
/mnt/library/StanHeaders/include/src/stan/services/optimize/bfgs.hpp:117:0:   required from ‘int stan::services::optimize::bfgs(Model&, const stan::io::var_context&, unsigned int, unsigned int, double, double, double, double, double, double, double, int, bool, int, stan::callbacks::interrupt&, stan::callbacks::logger&, stan::callbacks::writer&, stan::callbacks::writer&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; bool jacobian = false]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:517:0:   required from ‘int rstan::{anonymous}::command(rstan::stan_args&, Model&, Rcpp::List&, const std::vector<long unsigned int>&, const std::vector<std::__cxx11::basic_string<char> >&, RNG_t&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; Rcpp::List = Rcpp::Vector<19>]’
/mnt/library/rstan/include/rstan/stan_fit.hpp:1215:0:   required from ‘SEXPREC* rstan::stan_fit<Model, RNG_t>::call_sampler(SEXP) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; RNG_t = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >; SEXP = SEXPREC*]’
stanExports_negBinomial_MPI.cc:15:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:78:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   required from ‘struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:774:20:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >; Functor = sub_assign_op<double, double>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:954:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, -1, -1, 1, -1, -1> >, -1, -1, true> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
/mnt/library/RcppEigen/include/Eigen/src/Core/AssignEvaluator.h:890:49:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:453:11:   required from ‘static void Eigen::internal::tridiagonalization_inplace_selector<MatrixType, Size, IsComplex>::run(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; MatrixType = Eigen::Matrix<double, -1, -1>; int Size = -1; bool IsComplex = false; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/Tridiagonalization.h:434:55:   required from ‘void Eigen::internal::tridiagonalization_inplace(MatrixType&, DiagonalType&, SubDiagonalType&, CoeffVectorType&, bool) [with MatrixType = Eigen::Matrix<double, -1, -1>; DiagonalType = Eigen::Matrix<double, -1, 1>; SubDiagonalType = Eigen::Matrix<double, -1, 1>; CoeffVectorType = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:458:39:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/RcppEigen/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:181:14:   required from ‘Eigen::SelfAdjointEigenSolver<_MatrixType>::SelfAdjointEigenSolver(const Eigen::EigenBase<OtherDerived>&, int) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
/mnt/library/StanHeaders/include/src/stan/optimization/newton.hpp:19:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:103:7:   required from ‘class Eigen::CwiseUnaryViewImpl<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryView.h:58:7:   required from ‘class Eigen::CwiseUnaryView<Eigen::ArrayBase<Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::adj_Op, Eigen::Map<Eigen::Array<stan::math::var_value<double>, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/mnt/library/StanHeaders/include/stan/math/rev/fun/sum.hpp:32:18:   required from ‘stan::math::sum<arena_allocator<var_value<double> > >(const std::vector<var_value<double>, arena_allocator<var_value<double> > >&)::<lambda(auto:510&)> mutable [with auto:510 = stan::math::internal::callback_vari<double, stan::math::sum<arena_allocator<var_value<double> > >(const std::vector<var_value<double>, arena_allocator<var_value<double> > >&)::<lambda(auto:510&)> >]’
/mnt/library/StanHeaders/include/stan/math/rev/core/callback_vari.hpp:21:43:   required from ‘void stan::math::internal::callback_vari<T, F>::chain() [with T = double; F = stan::math::sum<arena_allocator<var_value<double> > >(const std::vector<var_value<double>, arena_allocator<var_value<double> > >&)::<lambda(auto:510&)>]’
/mnt/library/StanHeaders/include/stan/math/rev/core/callback_vari.hpp:21:15:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/nuts/base_nuts.hpp:175:0:   required from ‘stan::mcmc::sample stan::mcmc::base_nuts<Model, Hamiltonian, Integrator, BaseRNG>::transition(stan::mcmc::sample&, stan::callbacks::logger&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Hamiltonian = stan::mcmc::diag_e_metric; Integrator = stan::mcmc::expl_leapfrog; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/nuts/base_nuts.hpp:78:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:37:44:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; bool NeedToTranspose = false; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/diag_e_metric.hpp:21:0:   required from ‘double stan::mcmc::diag_e_metric<Model, BaseRNG>::T(stan::mcmc::diag_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/diag_e_metric.hpp:20:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:31:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:55:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/functor/apply_scalar_unary.hpp:62:23:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/erfc.hpp:40:48:   required from ‘auto stan::math::erfc(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<Container>* <anonymous> = 0; stan::require_not_var_matrix_t<Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:19:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:66:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/log.hpp:65:46:   required from ‘auto stan::math::log(const Container&) [with Container = Eigen::CwiseUnaryOp<apply_scalar_unary<erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:71:14:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/square.hpp:70:54:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/square.hpp:69:46:   required from ‘auto stan::math::square(const Container&) [with Container = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:82:23:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/square.hpp:70:54:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/square.hpp:69:46:   required from ‘auto stan::math::square(const Container&) [with Container = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:87:28:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:88:26:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:88:30:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/fun/exp.hpp:63:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/StanHeaders/include/stan/math/prim/fun/exp.hpp:62:46:   required from ‘auto stan::math::exp(const Container&) [with Container = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<apply_scalar_unary<erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >; stan::require_container_st<std::is_arithmetic, Container>* <anonymous> = 0]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:88:25:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:92:63:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:49:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:34:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:96:62:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:98:37:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:107:18:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:108:14:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:109:13:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ArrayBase.h:39:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_log_op<double>, const Eigen::CwiseUnaryOp<stan::math::apply_scalar_unary<stan::math::erfc_fun, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, void>::apply(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >&)::<lambda(auto:3&&)>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:112:48:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:39:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:54:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:37:51:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; bool NeedToTranspose = false; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/diag_e_metric.hpp:21:0:   required from ‘double stan::mcmc::diag_e_metric<Model, BaseRNG>::T(stan::mcmc::diag_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/diag_e_metric.hpp:20:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0> >, const Eigen::Matrix<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseUnaryOp<scalar_square_op<double>, const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/StanHeaders/include/stan/math/prim/fun/sum.hpp:47:15:   required from ‘stan::value_type_t<T> stan::math::sum(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_square_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >; stan::require_eigen_vt<std::is_arithmetic, T>* <anonymous> = 0; stan::value_type_t<T> = double]’
/mnt/library/StanHeaders/include/stan/math/prim/prob/skew_normal_lpdf.hpp:82:16:   required from ‘stan::return_type_t<T_y0, T_param, T_t0, T_ts> stan::math::skew_normal_lpdf(const T_y&, const T_loc&, const T_scale&, const T_shape&) [with bool propto = true; T_y = Eigen::Matrix<double, -1, 1>; T_loc = double; T_scale = double; T_shape = double; stan::require_all_not_nonscalar_prim_or_rev_kernel_expression_t<T_n, T_N, T_size1, T_size2>* <anonymous> = 0; stan::return_type_t<T_y0, T_param, T_t0, T_ts> = double]’
stanExports_negBinomial_MPI.h:1224:0:   required from ‘stan::scalar_type_t<T2> model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob_impl(VecR&, VecI&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; VecR = Eigen::Matrix<double, -1, 1>; VecI = Eigen::Matrix<int, -1, 1>; stan::require_vector_like_t<VecR>* <anonymous> = 0; stan::require_vector_like_vt<std::is_integral, VecI>* <anonymous> = 0; stan::scalar_type_t<T2> = double; std::ostream = std::basic_ostream<char>]’
stanExports_negBinomial_MPI.h:1844:0:   required from ‘T_ model_negBinomial_MPI_namespace::model_negBinomial_MPI::log_prob(Eigen::Matrix<T_job_param, -1, 1>&, std::ostream*) const [with bool propto__ = true; bool jacobian__ = false; T_ = double; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:115:0:   required from ‘double stan::model::model_base_crtp<M>::log_prob_propto(Eigen::VectorXd&, std::ostream*) const [with M = model_negBinomial_MPI_namespace::model_negBinomial_MPI; Eigen::VectorXd = Eigen::Matrix<double, -1, 1>; std::ostream = std::basic_ostream<char>]’
/mnt/library/StanHeaders/include/src/stan/model/model_base_crtp.hpp:113:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:172:103:   required from ‘class Eigen::internal::BlockImpl_dense<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true, false>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:154:7:   required from ‘class Eigen::BlockImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Block.h:103:81:   required from ‘class Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true>’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:43:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
   56 |                      >::type PacketReturnType;
      |                              ^~~~~~~~~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/GeneralProduct.h:207:43:   required from ‘static void Eigen::internal::gemv_dense_selector<1, StorageOrder, BlasCompatible>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >; Rhs = Eigen::Matrix<double, -1, -1>; Dest = Eigen::Matrix<double, 1, -1>; int StorageOrder = 0; bool BlasCompatible = true; typename Dest::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:388:34:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:23:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:56:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:481:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >, 2>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:118:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/mnt/library/RcppEigen/include/Eigen/src/Core/Transpose.h:52:37:   required from ‘class Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/util/BlasUtil.h:506:13:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, -1, 1, true>, 0>’:
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:302:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, -1, 1, true>, 1>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:555:7:   required from ‘class Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, -1, 1, true>, 3>’
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseBase.h:41:34:   required from ‘class Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MatrixBase.h:48:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, -1, 1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:37:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, 1, -1> >, -1, 1, true>, 0>’
/mnt/library/RcppEigen/include/Eigen/src/Core/MapBase.h:223:34:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:56:30: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h: In instantiation of ‘struct Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >’:
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:311:41:   required from ‘struct Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, Eigen::internal::IndexBased, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:90:8:   required from ‘struct Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:100:8:   required from ‘struct Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> > >’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:739:41:   required from ‘struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>’
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:722:8:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/CoreEvaluators.h:1071:54: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
 1071 |     PacketAlignment = unpacket_traits<PacketScalar>::alignment,
      |                                                      ^~~~~~~~~
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of ‘Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Eigen::Index = long int]’:
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:243:63:   required from ‘static Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 3, 0>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Func = Eigen::internal::scalar_sum_op<double, double>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >; Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:418:56:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Redux.h:463:25:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:50:63:   required from ‘static Eigen::internal::dot_nocheck<T, U, true>::ResScalar Eigen::internal::dot_nocheck<T, U, true>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true>; U = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; ResScalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Dot.h:84:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Derived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, 1, -1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double; typename Eigen::internal::traits<T>::Scalar = double; typename Eigen::internal::traits<OtherDerived>::Scalar = double]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:380:62:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:251:64:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<double, -1, 1>; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/ProductEvaluators.h:35:90:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; XprType = Eigen::Product<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
/mnt/library/RcppEigen/include/Eigen/src/Core/Product.h:137:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Scalar = double]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:22:0:   required from ‘double stan::mcmc::dense_e_metric<Model, BaseRNG>::T(stan::mcmc::dense_e_point&) [with Model = model_negBinomial_MPI_namespace::model_negBinomial_MPI; BaseRNG = boost::random::additive_combine_engine<boost::random::linear_congruential_engine<unsigned int, 40014, 0, 2147483563>, boost::random::linear_congruential_engine<unsigned int, 40692, 0, 2147483399> >]’
/mnt/library/StanHeaders/include/src/stan/mcmc/hmc/hamiltonians/dense_e_metric.hpp:21:0:   required from here
/mnt/library/RcppEigen/include/Eigen/src/Core/DenseCoeffsBase.h:654:74: warning: ignoring attributes on template argument ‘Eigen::internal::packet_traits<double>::type’ {aka ‘__m128d’} [-Wignored-attributes]
  654 |   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
      |                                                                          ^~~~~~~~~
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o ppcseq.so RcppExports.o stanExports_negBinomial_MPI.o -L/mnt/library/RcppParallel/lib/ -Wl,-rpath,/mnt/library/RcppParallel/lib/ -ltbb -ltbbmalloc -L/usr/local/lib/R/lib -lR
installing to /mnt/library/00LOCK-ppcseq/00new/ppcseq/libs
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ppcseq’ as ‘ppcseq_1.14.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ppcseq)

The downloaded source packages are in
	‘/tmp/RtmpzEtGBR/downloaded_packages’
Old packages: 'bslib', 'cli', 'curl', 'evaluate', 'httr2', 'jsonlite',
  'openssl', 'pillar', 'pkgbuild', 'processx', 'ps', 'purrr', 'R6', 'Rcpp',
  'rlang', 'sessioninfo', 'systemfonts', 'testthat', 'textshaping', 'tinytex',
  'xfun', 'zip', 'class', 'foreign', 'KernSmooth', 'MASS', 'Matrix', 'nlme',
  'nnet', 'rpart', 'spatial'

real	2m44.275s
user	1m54.382s
sys	0m16.324s
