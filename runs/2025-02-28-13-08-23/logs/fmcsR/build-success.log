'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://p3m.dev/cran/__linux__/noble/latest
Bioconductor version 3.20 (BiocManager 1.30.25), R 4.4.2 (2024-10-31)
Installing package(s) 'fmcsR'
trying URL 'https://bioconductor.org/packages/3.20/bioc/src/contrib/fmcsR_1.48.0.tar.gz'
Content type 'application/x-gzip' length 828677 bytes (809 KB)
==================================================
downloaded 809 KB

* installing *source* package ‘fmcsR’ ...
** package ‘fmcsR’ successfully unpacked and MD5 sums checked
** using staged installation
checking whether the C++ compiler works... yes
checking for C++ compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C++ compiler... yes
checking whether g++ -std=gnu++17 accepts -g... yes
checking for gcc... gcc
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for stdbool.h that conforms to C99... yes
checking for _Bool... yes
checking for inline... inline
checking for size_t... yes
checking for alarm... yes
configure: creating ./config.status
config.status: creating src/Makevars
config.status: creating config.h
config.status: config.h is unchanged
** libs
using C++ compiler: ‘g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -DSTRICT_R_HEADERS -DR_NO_REMAP  -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c MCS.cpp -o MCS.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -DSTRICT_R_HEADERS -DR_NO_REMAP  -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c MCSCompound.cpp -o MCSCompound.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -DSTRICT_R_HEADERS -DR_NO_REMAP  -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c MCSMap.cpp -o MCSMap.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -DSTRICT_R_HEADERS -DR_NO_REMAP  -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c MCSRingDetector.cpp -o MCSRingDetector.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -DSTRICT_R_HEADERS -DR_NO_REMAP  -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c fmcs_R_wrap.cpp -o fmcs_R_wrap.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -DSTRICT_R_HEADERS -DR_NO_REMAP  -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Wformat-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -DR_NO_REMAP -c util.cpp -o util.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o fmcsR.so MCS.o MCSCompound.o MCSMap.o MCSRingDetector.o fmcs_R_wrap.o util.o -L/usr/local/lib/R/lib -lR
installing to /mnt/library/00LOCK-fmcsR/00new/fmcsR/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘fmcsR’ as ‘fmcsR_1.48.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fmcsR)

The downloaded source packages are in
	‘/tmp/RtmpHIgVVX/downloaded_packages’
Old packages: 'bslib', 'cli', 'curl', 'evaluate', 'httr2', 'jsonlite',
  'openssl', 'pillar', 'pkgbuild', 'processx', 'ps', 'purrr', 'R6', 'Rcpp',
  'rlang', 'sessioninfo', 'systemfonts', 'testthat', 'textshaping', 'tinytex',
  'xfun', 'zip', 'class', 'foreign', 'KernSmooth', 'MASS', 'Matrix', 'nlme',
  'nnet', 'rpart', 'spatial'

real	0m58.146s
user	0m18.471s
sys	0m5.212s
